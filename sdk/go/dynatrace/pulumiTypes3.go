// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dynatrace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-dynatrace/sdk/go/dynatrace/internal"
)

var _ = internal.GetEnvOrDefault

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule struct {
	// Defines the conditions when the naming rule should apply
	Conditions *WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions `pulumi:"conditions"`
	// Naming pattern. Use Curly brackets `{}` to select placeholders
	Template string `pulumi:"template"`
	// If set to `true` the conditions will be connected by logical OR instead of logical AND
	UseOrConditions *bool `pulumi:"useOrConditions"`
}

// WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleInput is an input type that accepts WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArgs and WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleInput` via:
//
//	WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArgs{...}
type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput
	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArgs struct {
	// Defines the conditions when the naming rule should apply
	Conditions WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrInput `pulumi:"conditions"`
	// Naming pattern. Use Curly brackets `{}` to select placeholders
	Template pulumi.StringInput `pulumi:"template"`
	// If set to `true` the conditions will be connected by logical OR instead of logical AND
	UseOrConditions pulumi.BoolPtrInput `pulumi:"useOrConditions"`
}

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput)
}

// WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayInput is an input type that accepts WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArray and WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayInput` via:
//
//	WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArray{ WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArgs{...} }
type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput
	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArray []WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleInput

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArray) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArray) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput {
	return o
}

// Defines the conditions when the naming rule should apply
func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput) Conditions() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule) *WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions {
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput)
}

// Naming pattern. Use Curly brackets `{}` to select placeholders
func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput) Template() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule) string { return v.Template }).(pulumi.StringOutput)
}

// If set to `true` the conditions will be connected by logical OR instead of logical AND
func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput) UseOrConditions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule) *bool {
		return v.UseOrConditions
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule {
		return vs[0].([]WebApplicationUserActionNamingSettingsLoadActionNamingRulesRule)[vs[1].(int)]
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions struct {
	// Defines the conditions when the naming rule should apply
	Conditions []WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition `pulumi:"conditions"`
}

// WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsInput is an input type that accepts WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs and WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsInput` via:
//
//	WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs{...}
type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput
	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs struct {
	// Defines the conditions when the naming rule should apply
	Conditions WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayInput `pulumi:"conditions"`
}

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput)
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput).ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(ctx)
}

// WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrInput is an input type that accepts WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs, WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtr and WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrInput` via:
//
//	        WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput
	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput
}

type webApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrType WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs

func WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtr(v *WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrInput {
	return (*webApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrType)(v)
}

func (*webApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions)(nil)).Elem()
}

func (i *webApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrType) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrType) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return o.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions) *WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions {
		return &v
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput)
}

// Defines the conditions when the naming rule should apply
func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput) Conditions() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions) []WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition {
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput) Elem() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions
		return ret
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput)
}

// Defines the conditions when the naming rule should apply
func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput) Conditions() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditions) []WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition struct {
	// Must be a defined placeholder wrapped in curly braces
	Operand1 string `pulumi:"operand1"`
	// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	Operand2 *string `pulumi:"operand2"`
	// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
	Operator string `pulumi:"operator"`
}

// WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionInput is an input type that accepts WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArgs and WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionInput` via:
//
//	WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArgs{...}
type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput
	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArgs struct {
	// Must be a defined placeholder wrapped in curly braces
	Operand1 pulumi.StringInput `pulumi:"operand1"`
	// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	Operand2 pulumi.StringPtrInput `pulumi:"operand2"`
	// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
	Operator pulumi.StringInput `pulumi:"operator"`
}

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArgs) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput)
}

// WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayInput is an input type that accepts WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArray and WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayInput` via:
//
//	WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArray{ WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArgs{...} }
type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput
	ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArray []WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionInput

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArray) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput {
	return i.ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArray) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput {
	return o
}

// Must be a defined placeholder wrapped in curly braces
func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput) Operand1() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition) string {
		return v.Operand1
	}).(pulumi.StringOutput)
}

// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput) Operand2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition) *string {
		return v.Operand2
	}).(pulumi.StringPtrOutput)
}

// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

type WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput) ToWebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition {
		return vs[0].([]WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsCondition)[vs[1].(int)]
	}).(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholders struct {
	// User action placeholders
	Placeholders []WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder `pulumi:"placeholders"`
}

// WebApplicationUserActionNamingSettingsPlaceholdersInput is an input type that accepts WebApplicationUserActionNamingSettingsPlaceholdersArgs and WebApplicationUserActionNamingSettingsPlaceholdersOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPlaceholdersInput` via:
//
//	WebApplicationUserActionNamingSettingsPlaceholdersArgs{...}
type WebApplicationUserActionNamingSettingsPlaceholdersInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPlaceholdersOutput() WebApplicationUserActionNamingSettingsPlaceholdersOutput
	ToWebApplicationUserActionNamingSettingsPlaceholdersOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPlaceholdersOutput
}

type WebApplicationUserActionNamingSettingsPlaceholdersArgs struct {
	// User action placeholders
	Placeholders WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayInput `pulumi:"placeholders"`
}

func (WebApplicationUserActionNamingSettingsPlaceholdersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholders)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersOutput() WebApplicationUserActionNamingSettingsPlaceholdersOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersOutput)
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersOutput).ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(ctx)
}

// WebApplicationUserActionNamingSettingsPlaceholdersPtrInput is an input type that accepts WebApplicationUserActionNamingSettingsPlaceholdersArgs, WebApplicationUserActionNamingSettingsPlaceholdersPtr and WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPlaceholdersPtrInput` via:
//
//	        WebApplicationUserActionNamingSettingsPlaceholdersArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionNamingSettingsPlaceholdersPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput
	ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput
}

type webApplicationUserActionNamingSettingsPlaceholdersPtrType WebApplicationUserActionNamingSettingsPlaceholdersArgs

func WebApplicationUserActionNamingSettingsPlaceholdersPtr(v *WebApplicationUserActionNamingSettingsPlaceholdersArgs) WebApplicationUserActionNamingSettingsPlaceholdersPtrInput {
	return (*webApplicationUserActionNamingSettingsPlaceholdersPtrType)(v)
}

func (*webApplicationUserActionNamingSettingsPlaceholdersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsPlaceholders)(nil)).Elem()
}

func (i *webApplicationUserActionNamingSettingsPlaceholdersPtrType) ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionNamingSettingsPlaceholdersPtrType) ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPlaceholdersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholders)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersOutput() WebApplicationUserActionNamingSettingsPlaceholdersOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return o.ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionNamingSettingsPlaceholders) *WebApplicationUserActionNamingSettingsPlaceholders {
		return &v
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput)
}

// User action placeholders
func (o WebApplicationUserActionNamingSettingsPlaceholdersOutput) Placeholders() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholders) []WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder {
		return v.Placeholders
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsPlaceholders)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput) Elem() WebApplicationUserActionNamingSettingsPlaceholdersOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsPlaceholders) WebApplicationUserActionNamingSettingsPlaceholders {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionNamingSettingsPlaceholders
		return ret
	}).(WebApplicationUserActionNamingSettingsPlaceholdersOutput)
}

// User action placeholders
func (o WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput) Placeholders() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsPlaceholders) []WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder {
		if v == nil {
			return nil
		}
		return v.Placeholders
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder struct {
	// The input for the place holder. Possible values are `ELEMENT_IDENTIFIER`, `INPUT_TYPE`, `METADATA`, `PAGE_TITLE`, `PAGE_URL`, `SOURCE_URL`, `TOP_XHR_URL` and `XHR_URL`
	Input string `pulumi:"input"`
	// The ID of the metadata
	MetadataId *int `pulumi:"metadataId"`
	// Placeholder name. Valid length needs to be between 1 and 50 characters
	Name string `pulumi:"name"`
	// The part to process. Possible values are `ALL`, `ANCHOR` and `PATH`
	ProcessingPart string `pulumi:"processingPart"`
	// The processing step settings
	ProcessingSteps *WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps `pulumi:"processingSteps"`
	// Use the element identifier that was selected by Dynatrace
	UseGuessedElementIdentifier *bool `pulumi:"useGuessedElementIdentifier"`
}

// WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderInput is an input type that accepts WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs and WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderInput` via:
//
//	WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs{...}
type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput
	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs struct {
	// The input for the place holder. Possible values are `ELEMENT_IDENTIFIER`, `INPUT_TYPE`, `METADATA`, `PAGE_TITLE`, `PAGE_URL`, `SOURCE_URL`, `TOP_XHR_URL` and `XHR_URL`
	Input pulumi.StringInput `pulumi:"input"`
	// The ID of the metadata
	MetadataId pulumi.IntPtrInput `pulumi:"metadataId"`
	// Placeholder name. Valid length needs to be between 1 and 50 characters
	Name pulumi.StringInput `pulumi:"name"`
	// The part to process. Possible values are `ALL`, `ANCHOR` and `PATH`
	ProcessingPart pulumi.StringInput `pulumi:"processingPart"`
	// The processing step settings
	ProcessingSteps WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrInput `pulumi:"processingSteps"`
	// Use the element identifier that was selected by Dynatrace
	UseGuessedElementIdentifier pulumi.BoolPtrInput `pulumi:"useGuessedElementIdentifier"`
}

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput)
}

// WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayInput is an input type that accepts WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArray and WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayInput` via:
//
//	WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArray{ WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs{...} }
type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput
	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArray []WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderInput

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArray) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArray) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput {
	return o
}

// The input for the place holder. Possible values are `ELEMENT_IDENTIFIER`, `INPUT_TYPE`, `METADATA`, `PAGE_TITLE`, `PAGE_URL`, `SOURCE_URL`, `TOP_XHR_URL` and `XHR_URL`
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) Input() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder) string { return v.Input }).(pulumi.StringOutput)
}

// The ID of the metadata
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) MetadataId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder) *int { return v.MetadataId }).(pulumi.IntPtrOutput)
}

// Placeholder name. Valid length needs to be between 1 and 50 characters
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder) string { return v.Name }).(pulumi.StringOutput)
}

// The part to process. Possible values are `ALL`, `ANCHOR` and `PATH`
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) ProcessingPart() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder) string { return v.ProcessingPart }).(pulumi.StringOutput)
}

// The processing step settings
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) ProcessingSteps() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder) *WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps {
		return v.ProcessingSteps
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput)
}

// Use the element identifier that was selected by Dynatrace
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput) UseGuessedElementIdentifier() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder) *bool {
		return v.UseGuessedElementIdentifier
	}).(pulumi.BoolPtrOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder {
		return vs[0].([]WebApplicationUserActionNamingSettingsPlaceholdersPlaceholder)[vs[1].(int)]
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps struct {
	// The processing step
	Steps []WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep `pulumi:"steps"`
}

// WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsInput is an input type that accepts WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs and WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsInput` via:
//
//	WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs{...}
type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput
	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs struct {
	// The processing step
	Steps WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayInput `pulumi:"steps"`
}

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput)
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput).ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(ctx)
}

// WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrInput is an input type that accepts WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs, WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtr and WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrInput` via:
//
//	        WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput
	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput
}

type webApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrType WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs

func WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtr(v *WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrInput {
	return (*webApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrType)(v)
}

func (*webApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps)(nil)).Elem()
}

func (i *webApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrType) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrType) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return o.ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps) *WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps {
		return &v
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput)
}

// The processing step
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput) Steps() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps) []WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep {
		return v.Steps
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput) Elem() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps
		return ret
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput)
}

// The processing step
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput) Steps() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingSteps) []WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep {
		if v == nil {
			return nil
		}
		return v.Steps
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep struct {
	// If set to `true`: Returns the input if `patternBefore` or `patternAfter` cannot be found and the `type` is `SUBSTRING`. Returns the input if `regularExpression` doesn't match and `type` is `EXTRACT_BY_REGULAR_EXPRESSION`.
	FallbackToInput *bool `pulumi:"fallbackToInput"`
	// The pattern after the required value. It will be removed.
	PatternAfter *string `pulumi:"patternAfter"`
	// The required occurrence of **patternAfter**. Possible values are `FIRST` and `LAST`.
	PatternAfterSearchType *string `pulumi:"patternAfterSearchType"`
	// The pattern before the required value. It will be removed.
	PatternBefore *string `pulumi:"patternBefore"`
	// The required occurrence of **patternBefore**. Possible values are `FIRST` and `LAST`.
	PatternBeforeSearchType *string `pulumi:"patternBeforeSearchType"`
	// The pattern to be replaced.
	//
	//  Only applicable if the `type` is `REPLACE_WITH_PATTERN`.
	PatternToReplace *string `pulumi:"patternToReplace"`
	// A regular expression for the string to be extracted or replaced. Only applicable if the `type` is `EXTRACT_BY_REGULAR_EXPRESSION` or `REPLACE_WITH_REGULAR_EXPRESSION`.
	RegularExpression *string `pulumi:"regularExpression"`
	// Replacement for the original value
	Replacement *string `pulumi:"replacement"`
	// An action to be taken by the processing:
	Type string `pulumi:"type"`
}

// WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepInput is an input type that accepts WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs and WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepInput` via:
//
//	WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs{...}
type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput
	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs struct {
	// If set to `true`: Returns the input if `patternBefore` or `patternAfter` cannot be found and the `type` is `SUBSTRING`. Returns the input if `regularExpression` doesn't match and `type` is `EXTRACT_BY_REGULAR_EXPRESSION`.
	FallbackToInput pulumi.BoolPtrInput `pulumi:"fallbackToInput"`
	// The pattern after the required value. It will be removed.
	PatternAfter pulumi.StringPtrInput `pulumi:"patternAfter"`
	// The required occurrence of **patternAfter**. Possible values are `FIRST` and `LAST`.
	PatternAfterSearchType pulumi.StringPtrInput `pulumi:"patternAfterSearchType"`
	// The pattern before the required value. It will be removed.
	PatternBefore pulumi.StringPtrInput `pulumi:"patternBefore"`
	// The required occurrence of **patternBefore**. Possible values are `FIRST` and `LAST`.
	PatternBeforeSearchType pulumi.StringPtrInput `pulumi:"patternBeforeSearchType"`
	// The pattern to be replaced.
	//
	//  Only applicable if the `type` is `REPLACE_WITH_PATTERN`.
	PatternToReplace pulumi.StringPtrInput `pulumi:"patternToReplace"`
	// A regular expression for the string to be extracted or replaced. Only applicable if the `type` is `EXTRACT_BY_REGULAR_EXPRESSION` or `REPLACE_WITH_REGULAR_EXPRESSION`.
	RegularExpression pulumi.StringPtrInput `pulumi:"regularExpression"`
	// Replacement for the original value
	Replacement pulumi.StringPtrInput `pulumi:"replacement"`
	// An action to be taken by the processing:
	Type pulumi.StringInput `pulumi:"type"`
}

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput)
}

// WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayInput is an input type that accepts WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArray and WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayInput` via:
//
//	WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArray{ WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs{...} }
type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput
	ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArray []WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepInput

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArray) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput {
	return i.ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArray) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput {
	return o
}

// If set to `true`: Returns the input if `patternBefore` or `patternAfter` cannot be found and the `type` is `SUBSTRING`. Returns the input if `regularExpression` doesn't match and `type` is `EXTRACT_BY_REGULAR_EXPRESSION`.
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) FallbackToInput() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) *bool {
		return v.FallbackToInput
	}).(pulumi.BoolPtrOutput)
}

// The pattern after the required value. It will be removed.
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) PatternAfter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) *string {
		return v.PatternAfter
	}).(pulumi.StringPtrOutput)
}

// The required occurrence of **patternAfter**. Possible values are `FIRST` and `LAST`.
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) PatternAfterSearchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) *string {
		return v.PatternAfterSearchType
	}).(pulumi.StringPtrOutput)
}

// The pattern before the required value. It will be removed.
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) PatternBefore() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) *string {
		return v.PatternBefore
	}).(pulumi.StringPtrOutput)
}

// The required occurrence of **patternBefore**. Possible values are `FIRST` and `LAST`.
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) PatternBeforeSearchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) *string {
		return v.PatternBeforeSearchType
	}).(pulumi.StringPtrOutput)
}

// The pattern to be replaced.
//
//	Only applicable if the `type` is `REPLACE_WITH_PATTERN`.
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) PatternToReplace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) *string {
		return v.PatternToReplace
	}).(pulumi.StringPtrOutput)
}

// A regular expression for the string to be extracted or replaced. Only applicable if the `type` is `EXTRACT_BY_REGULAR_EXPRESSION` or `REPLACE_WITH_REGULAR_EXPRESSION`.
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) RegularExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) *string {
		return v.RegularExpression
	}).(pulumi.StringPtrOutput)
}

// Replacement for the original value
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) Replacement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) *string {
		return v.Replacement
	}).(pulumi.StringPtrOutput)
}

// An action to be taken by the processing:
func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep) string {
		return v.Type
	}).(pulumi.StringOutput)
}

type WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput() WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput) ToWebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep {
		return vs[0].([]WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStep)[vs[1].(int)]
	}).(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRules struct {
	// The settings of naming rule
	Rules []WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule `pulumi:"rules"`
}

// WebApplicationUserActionNamingSettingsXhrActionNamingRulesInput is an input type that accepts WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs and WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsXhrActionNamingRulesInput` via:
//
//	WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs{...}
type WebApplicationUserActionNamingSettingsXhrActionNamingRulesInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput
	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs struct {
	// The settings of naming rule
	Rules WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayInput `pulumi:"rules"`
}

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRules)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput)
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput).ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(ctx)
}

// WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrInput is an input type that accepts WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs, WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtr and WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrInput` via:
//
//	        WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput
	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput
}

type webApplicationUserActionNamingSettingsXhrActionNamingRulesPtrType WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs

func WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtr(v *WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs) WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrInput {
	return (*webApplicationUserActionNamingSettingsXhrActionNamingRulesPtrType)(v)
}

func (*webApplicationUserActionNamingSettingsXhrActionNamingRulesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsXhrActionNamingRules)(nil)).Elem()
}

func (i *webApplicationUserActionNamingSettingsXhrActionNamingRulesPtrType) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionNamingSettingsXhrActionNamingRulesPtrType) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRules)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return o.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionNamingSettingsXhrActionNamingRules) *WebApplicationUserActionNamingSettingsXhrActionNamingRules {
		return &v
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput)
}

// The settings of naming rule
func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput) Rules() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsXhrActionNamingRules) []WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule {
		return v.Rules
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsXhrActionNamingRules)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput) Elem() WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsXhrActionNamingRules) WebApplicationUserActionNamingSettingsXhrActionNamingRules {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionNamingSettingsXhrActionNamingRules
		return ret
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput)
}

// The settings of naming rule
func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput) Rules() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsXhrActionNamingRules) []WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule struct {
	// Defines the conditions when the naming rule should apply
	Conditions *WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions `pulumi:"conditions"`
	// Naming pattern. Use Curly brackets `{}` to select placeholders
	Template string `pulumi:"template"`
	// If set to `true` the conditions will be connected by logical OR instead of logical AND
	UseOrConditions *bool `pulumi:"useOrConditions"`
}

// WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleInput is an input type that accepts WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArgs and WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleInput` via:
//
//	WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArgs{...}
type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput
	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArgs struct {
	// Defines the conditions when the naming rule should apply
	Conditions WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrInput `pulumi:"conditions"`
	// Naming pattern. Use Curly brackets `{}` to select placeholders
	Template pulumi.StringInput `pulumi:"template"`
	// If set to `true` the conditions will be connected by logical OR instead of logical AND
	UseOrConditions pulumi.BoolPtrInput `pulumi:"useOrConditions"`
}

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput)
}

// WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayInput is an input type that accepts WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArray and WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayInput` via:
//
//	WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArray{ WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArgs{...} }
type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput
	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArray []WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleInput

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArray) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArray) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput {
	return o
}

// Defines the conditions when the naming rule should apply
func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput) Conditions() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule) *WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions {
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput)
}

// Naming pattern. Use Curly brackets `{}` to select placeholders
func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput) Template() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule) string { return v.Template }).(pulumi.StringOutput)
}

// If set to `true` the conditions will be connected by logical OR instead of logical AND
func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput) UseOrConditions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule) *bool { return v.UseOrConditions }).(pulumi.BoolPtrOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule {
		return vs[0].([]WebApplicationUserActionNamingSettingsXhrActionNamingRulesRule)[vs[1].(int)]
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions struct {
	// Defines the conditions when the naming rule should apply
	Conditions []WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition `pulumi:"conditions"`
}

// WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsInput is an input type that accepts WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs and WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsInput` via:
//
//	WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs{...}
type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput
	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs struct {
	// Defines the conditions when the naming rule should apply
	Conditions WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayInput `pulumi:"conditions"`
}

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput)
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput).ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(ctx)
}

// WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrInput is an input type that accepts WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs, WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtr and WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrInput` via:
//
//	        WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput
	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput
}

type webApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrType WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs

func WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtr(v *WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrInput {
	return (*webApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrType)(v)
}

func (*webApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions)(nil)).Elem()
}

func (i *webApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrType) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrType) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return o.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions) *WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions {
		return &v
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput)
}

// Defines the conditions when the naming rule should apply
func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput) Conditions() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions) []WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition {
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput) Elem() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions
		return ret
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput)
}

// Defines the conditions when the naming rule should apply
func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput) Conditions() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditions) []WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition struct {
	// Must be a defined placeholder wrapped in curly braces
	Operand1 string `pulumi:"operand1"`
	// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	Operand2 *string `pulumi:"operand2"`
	// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
	Operator string `pulumi:"operator"`
}

// WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionInput is an input type that accepts WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArgs and WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionInput` via:
//
//	WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArgs{...}
type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput
	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArgs struct {
	// Must be a defined placeholder wrapped in curly braces
	Operand1 pulumi.StringInput `pulumi:"operand1"`
	// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
	Operand2 pulumi.StringPtrInput `pulumi:"operand2"`
	// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
	Operator pulumi.StringInput `pulumi:"operator"`
}

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArgs) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput)
}

// WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayInput is an input type that accepts WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArray and WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayInput` via:
//
//	WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArray{ WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArgs{...} }
type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayInput interface {
	pulumi.Input

	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput
	ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutputWithContext(context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArray []WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionInput

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArray) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput {
	return i.ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArray) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput {
	return o
}

// Must be a defined placeholder wrapped in curly braces
func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput) Operand1() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition) string {
		return v.Operand1
	}).(pulumi.StringOutput)
}

// Must be null if operator is `IS_EMPTY`, a regex if operator is `MATCHES_REGULAR_ERPRESSION`. In all other cases the value can be a freetext or a placeholder wrapped in curly braces
func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput) Operand2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition) *string {
		return v.Operand2
	}).(pulumi.StringPtrOutput)
}

// The operator of the condition. Possible values are `CONTAINS`, `ENDS_WITH`, `EQUALS`, `IS_EMPTY`, `IS_NOT_EMPTY`, `MATCHES_REGULAR_EXPRESSION`, `NOT_CONTAINS`, `NOT_ENDS_WITH`, `NOT_EQUALS`, `NOT_MATCHES_REGULAR_EXPRESSION`, `NOT_STARTS_WITH` and `STARTS_WITH`.
func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

type WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition)(nil)).Elem()
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput() WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput) ToWebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutputWithContext(ctx context.Context) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput {
	return o
}

func (o WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput) Index(i pulumi.IntInput) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition {
		return vs[0].([]WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsCondition)[vs[1].(int)]
	}).(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput)
}

type WebApplicationUserTags struct {
	// User tag settings
	Tags []WebApplicationUserTagsTag `pulumi:"tags"`
}

// WebApplicationUserTagsInput is an input type that accepts WebApplicationUserTagsArgs and WebApplicationUserTagsOutput values.
// You can construct a concrete instance of `WebApplicationUserTagsInput` via:
//
//	WebApplicationUserTagsArgs{...}
type WebApplicationUserTagsInput interface {
	pulumi.Input

	ToWebApplicationUserTagsOutput() WebApplicationUserTagsOutput
	ToWebApplicationUserTagsOutputWithContext(context.Context) WebApplicationUserTagsOutput
}

type WebApplicationUserTagsArgs struct {
	// User tag settings
	Tags WebApplicationUserTagsTagArrayInput `pulumi:"tags"`
}

func (WebApplicationUserTagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserTags)(nil)).Elem()
}

func (i WebApplicationUserTagsArgs) ToWebApplicationUserTagsOutput() WebApplicationUserTagsOutput {
	return i.ToWebApplicationUserTagsOutputWithContext(context.Background())
}

func (i WebApplicationUserTagsArgs) ToWebApplicationUserTagsOutputWithContext(ctx context.Context) WebApplicationUserTagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserTagsOutput)
}

func (i WebApplicationUserTagsArgs) ToWebApplicationUserTagsPtrOutput() WebApplicationUserTagsPtrOutput {
	return i.ToWebApplicationUserTagsPtrOutputWithContext(context.Background())
}

func (i WebApplicationUserTagsArgs) ToWebApplicationUserTagsPtrOutputWithContext(ctx context.Context) WebApplicationUserTagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserTagsOutput).ToWebApplicationUserTagsPtrOutputWithContext(ctx)
}

// WebApplicationUserTagsPtrInput is an input type that accepts WebApplicationUserTagsArgs, WebApplicationUserTagsPtr and WebApplicationUserTagsPtrOutput values.
// You can construct a concrete instance of `WebApplicationUserTagsPtrInput` via:
//
//	        WebApplicationUserTagsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationUserTagsPtrInput interface {
	pulumi.Input

	ToWebApplicationUserTagsPtrOutput() WebApplicationUserTagsPtrOutput
	ToWebApplicationUserTagsPtrOutputWithContext(context.Context) WebApplicationUserTagsPtrOutput
}

type webApplicationUserTagsPtrType WebApplicationUserTagsArgs

func WebApplicationUserTagsPtr(v *WebApplicationUserTagsArgs) WebApplicationUserTagsPtrInput {
	return (*webApplicationUserTagsPtrType)(v)
}

func (*webApplicationUserTagsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserTags)(nil)).Elem()
}

func (i *webApplicationUserTagsPtrType) ToWebApplicationUserTagsPtrOutput() WebApplicationUserTagsPtrOutput {
	return i.ToWebApplicationUserTagsPtrOutputWithContext(context.Background())
}

func (i *webApplicationUserTagsPtrType) ToWebApplicationUserTagsPtrOutputWithContext(ctx context.Context) WebApplicationUserTagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserTagsPtrOutput)
}

type WebApplicationUserTagsOutput struct{ *pulumi.OutputState }

func (WebApplicationUserTagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserTags)(nil)).Elem()
}

func (o WebApplicationUserTagsOutput) ToWebApplicationUserTagsOutput() WebApplicationUserTagsOutput {
	return o
}

func (o WebApplicationUserTagsOutput) ToWebApplicationUserTagsOutputWithContext(ctx context.Context) WebApplicationUserTagsOutput {
	return o
}

func (o WebApplicationUserTagsOutput) ToWebApplicationUserTagsPtrOutput() WebApplicationUserTagsPtrOutput {
	return o.ToWebApplicationUserTagsPtrOutputWithContext(context.Background())
}

func (o WebApplicationUserTagsOutput) ToWebApplicationUserTagsPtrOutputWithContext(ctx context.Context) WebApplicationUserTagsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationUserTags) *WebApplicationUserTags {
		return &v
	}).(WebApplicationUserTagsPtrOutput)
}

// User tag settings
func (o WebApplicationUserTagsOutput) Tags() WebApplicationUserTagsTagArrayOutput {
	return o.ApplyT(func(v WebApplicationUserTags) []WebApplicationUserTagsTag { return v.Tags }).(WebApplicationUserTagsTagArrayOutput)
}

type WebApplicationUserTagsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationUserTagsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationUserTags)(nil)).Elem()
}

func (o WebApplicationUserTagsPtrOutput) ToWebApplicationUserTagsPtrOutput() WebApplicationUserTagsPtrOutput {
	return o
}

func (o WebApplicationUserTagsPtrOutput) ToWebApplicationUserTagsPtrOutputWithContext(ctx context.Context) WebApplicationUserTagsPtrOutput {
	return o
}

func (o WebApplicationUserTagsPtrOutput) Elem() WebApplicationUserTagsOutput {
	return o.ApplyT(func(v *WebApplicationUserTags) WebApplicationUserTags {
		if v != nil {
			return *v
		}
		var ret WebApplicationUserTags
		return ret
	}).(WebApplicationUserTagsOutput)
}

// User tag settings
func (o WebApplicationUserTagsPtrOutput) Tags() WebApplicationUserTagsTagArrayOutput {
	return o.ApplyT(func(v *WebApplicationUserTags) []WebApplicationUserTagsTag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(WebApplicationUserTagsTagArrayOutput)
}

type WebApplicationUserTagsTag struct {
	// Cleanup rule expression of the userTag
	CleanupRule *string `pulumi:"cleanupRule"`
	Id          *int    `pulumi:"id"`
	// If `true`, the value of this tag will always be stored in lower case. Defaults to `false`.
	IgnoreCase *bool `pulumi:"ignoreCase"`
	// If it's of type metaData, metaData id of the userTag
	MetadataId *int `pulumi:"metadataId"`
	// The ID of the RrequestAttribute for the userTag
	ServerSideRequestAttribute *string `pulumi:"serverSideRequestAttribute"`
	// A unique ID among all userTags and properties of this application. Minimum value is 1.
	UniqueId *int `pulumi:"uniqueId"`
}

// WebApplicationUserTagsTagInput is an input type that accepts WebApplicationUserTagsTagArgs and WebApplicationUserTagsTagOutput values.
// You can construct a concrete instance of `WebApplicationUserTagsTagInput` via:
//
//	WebApplicationUserTagsTagArgs{...}
type WebApplicationUserTagsTagInput interface {
	pulumi.Input

	ToWebApplicationUserTagsTagOutput() WebApplicationUserTagsTagOutput
	ToWebApplicationUserTagsTagOutputWithContext(context.Context) WebApplicationUserTagsTagOutput
}

type WebApplicationUserTagsTagArgs struct {
	// Cleanup rule expression of the userTag
	CleanupRule pulumi.StringPtrInput `pulumi:"cleanupRule"`
	Id          pulumi.IntPtrInput    `pulumi:"id"`
	// If `true`, the value of this tag will always be stored in lower case. Defaults to `false`.
	IgnoreCase pulumi.BoolPtrInput `pulumi:"ignoreCase"`
	// If it's of type metaData, metaData id of the userTag
	MetadataId pulumi.IntPtrInput `pulumi:"metadataId"`
	// The ID of the RrequestAttribute for the userTag
	ServerSideRequestAttribute pulumi.StringPtrInput `pulumi:"serverSideRequestAttribute"`
	// A unique ID among all userTags and properties of this application. Minimum value is 1.
	UniqueId pulumi.IntPtrInput `pulumi:"uniqueId"`
}

func (WebApplicationUserTagsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserTagsTag)(nil)).Elem()
}

func (i WebApplicationUserTagsTagArgs) ToWebApplicationUserTagsTagOutput() WebApplicationUserTagsTagOutput {
	return i.ToWebApplicationUserTagsTagOutputWithContext(context.Background())
}

func (i WebApplicationUserTagsTagArgs) ToWebApplicationUserTagsTagOutputWithContext(ctx context.Context) WebApplicationUserTagsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserTagsTagOutput)
}

// WebApplicationUserTagsTagArrayInput is an input type that accepts WebApplicationUserTagsTagArray and WebApplicationUserTagsTagArrayOutput values.
// You can construct a concrete instance of `WebApplicationUserTagsTagArrayInput` via:
//
//	WebApplicationUserTagsTagArray{ WebApplicationUserTagsTagArgs{...} }
type WebApplicationUserTagsTagArrayInput interface {
	pulumi.Input

	ToWebApplicationUserTagsTagArrayOutput() WebApplicationUserTagsTagArrayOutput
	ToWebApplicationUserTagsTagArrayOutputWithContext(context.Context) WebApplicationUserTagsTagArrayOutput
}

type WebApplicationUserTagsTagArray []WebApplicationUserTagsTagInput

func (WebApplicationUserTagsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserTagsTag)(nil)).Elem()
}

func (i WebApplicationUserTagsTagArray) ToWebApplicationUserTagsTagArrayOutput() WebApplicationUserTagsTagArrayOutput {
	return i.ToWebApplicationUserTagsTagArrayOutputWithContext(context.Background())
}

func (i WebApplicationUserTagsTagArray) ToWebApplicationUserTagsTagArrayOutputWithContext(ctx context.Context) WebApplicationUserTagsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationUserTagsTagArrayOutput)
}

type WebApplicationUserTagsTagOutput struct{ *pulumi.OutputState }

func (WebApplicationUserTagsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationUserTagsTag)(nil)).Elem()
}

func (o WebApplicationUserTagsTagOutput) ToWebApplicationUserTagsTagOutput() WebApplicationUserTagsTagOutput {
	return o
}

func (o WebApplicationUserTagsTagOutput) ToWebApplicationUserTagsTagOutputWithContext(ctx context.Context) WebApplicationUserTagsTagOutput {
	return o
}

// Cleanup rule expression of the userTag
func (o WebApplicationUserTagsTagOutput) CleanupRule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserTagsTag) *string { return v.CleanupRule }).(pulumi.StringPtrOutput)
}

func (o WebApplicationUserTagsTagOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationUserTagsTag) *int { return v.Id }).(pulumi.IntPtrOutput)
}

// If `true`, the value of this tag will always be stored in lower case. Defaults to `false`.
func (o WebApplicationUserTagsTagOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebApplicationUserTagsTag) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

// If it's of type metaData, metaData id of the userTag
func (o WebApplicationUserTagsTagOutput) MetadataId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationUserTagsTag) *int { return v.MetadataId }).(pulumi.IntPtrOutput)
}

// The ID of the RrequestAttribute for the userTag
func (o WebApplicationUserTagsTagOutput) ServerSideRequestAttribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebApplicationUserTagsTag) *string { return v.ServerSideRequestAttribute }).(pulumi.StringPtrOutput)
}

// A unique ID among all userTags and properties of this application. Minimum value is 1.
func (o WebApplicationUserTagsTagOutput) UniqueId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationUserTagsTag) *int { return v.UniqueId }).(pulumi.IntPtrOutput)
}

type WebApplicationUserTagsTagArrayOutput struct{ *pulumi.OutputState }

func (WebApplicationUserTagsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebApplicationUserTagsTag)(nil)).Elem()
}

func (o WebApplicationUserTagsTagArrayOutput) ToWebApplicationUserTagsTagArrayOutput() WebApplicationUserTagsTagArrayOutput {
	return o
}

func (o WebApplicationUserTagsTagArrayOutput) ToWebApplicationUserTagsTagArrayOutputWithContext(ctx context.Context) WebApplicationUserTagsTagArrayOutput {
	return o
}

func (o WebApplicationUserTagsTagArrayOutput) Index(i pulumi.IntInput) WebApplicationUserTagsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebApplicationUserTagsTag {
		return vs[0].([]WebApplicationUserTagsTag)[vs[1].(int)]
	}).(WebApplicationUserTagsTagOutput)
}

type WebApplicationWaterfallSettings struct {
	// Warn about resources with a lower browser cache rate above *X*%. Values between 1 and 100 are allowed.
	ResourceBrowserCachingThreshold int `pulumi:"resourceBrowserCachingThreshold"`
	// Warn about resources larger than *X* bytes. Values between 0 and 99999000 are allowed.
	ResourcesThreshold int `pulumi:"resourcesThreshold"`
	// Warn about slow CDN resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	SlowCndResourcesThreshold int `pulumi:"slowCndResourcesThreshold"`
	// Warn about slow 1st party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	SlowFirstPartyResourcesThreshold int `pulumi:"slowFirstPartyResourcesThreshold"`
	// Warn about slow 3rd party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	SlowThirdPartyResourcesThreshold int `pulumi:"slowThirdPartyResourcesThreshold"`
	// Warn if Speed index exceeds *X* % of Visually complete. Values between 1 and 99 are allowed.
	SpeedIndexVisuallyCompleteRatioThreshold int `pulumi:"speedIndexVisuallyCompleteRatioThreshold"`
	// Warn about uncompressed resources larger than *X* bytes. Values between 0 and 99999 are allowed.
	UncompressedResourcesThreshold int `pulumi:"uncompressedResourcesThreshold"`
}

// WebApplicationWaterfallSettingsInput is an input type that accepts WebApplicationWaterfallSettingsArgs and WebApplicationWaterfallSettingsOutput values.
// You can construct a concrete instance of `WebApplicationWaterfallSettingsInput` via:
//
//	WebApplicationWaterfallSettingsArgs{...}
type WebApplicationWaterfallSettingsInput interface {
	pulumi.Input

	ToWebApplicationWaterfallSettingsOutput() WebApplicationWaterfallSettingsOutput
	ToWebApplicationWaterfallSettingsOutputWithContext(context.Context) WebApplicationWaterfallSettingsOutput
}

type WebApplicationWaterfallSettingsArgs struct {
	// Warn about resources with a lower browser cache rate above *X*%. Values between 1 and 100 are allowed.
	ResourceBrowserCachingThreshold pulumi.IntInput `pulumi:"resourceBrowserCachingThreshold"`
	// Warn about resources larger than *X* bytes. Values between 0 and 99999000 are allowed.
	ResourcesThreshold pulumi.IntInput `pulumi:"resourcesThreshold"`
	// Warn about slow CDN resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	SlowCndResourcesThreshold pulumi.IntInput `pulumi:"slowCndResourcesThreshold"`
	// Warn about slow 1st party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	SlowFirstPartyResourcesThreshold pulumi.IntInput `pulumi:"slowFirstPartyResourcesThreshold"`
	// Warn about slow 3rd party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
	SlowThirdPartyResourcesThreshold pulumi.IntInput `pulumi:"slowThirdPartyResourcesThreshold"`
	// Warn if Speed index exceeds *X* % of Visually complete. Values between 1 and 99 are allowed.
	SpeedIndexVisuallyCompleteRatioThreshold pulumi.IntInput `pulumi:"speedIndexVisuallyCompleteRatioThreshold"`
	// Warn about uncompressed resources larger than *X* bytes. Values between 0 and 99999 are allowed.
	UncompressedResourcesThreshold pulumi.IntInput `pulumi:"uncompressedResourcesThreshold"`
}

func (WebApplicationWaterfallSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationWaterfallSettings)(nil)).Elem()
}

func (i WebApplicationWaterfallSettingsArgs) ToWebApplicationWaterfallSettingsOutput() WebApplicationWaterfallSettingsOutput {
	return i.ToWebApplicationWaterfallSettingsOutputWithContext(context.Background())
}

func (i WebApplicationWaterfallSettingsArgs) ToWebApplicationWaterfallSettingsOutputWithContext(ctx context.Context) WebApplicationWaterfallSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationWaterfallSettingsOutput)
}

func (i WebApplicationWaterfallSettingsArgs) ToWebApplicationWaterfallSettingsPtrOutput() WebApplicationWaterfallSettingsPtrOutput {
	return i.ToWebApplicationWaterfallSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationWaterfallSettingsArgs) ToWebApplicationWaterfallSettingsPtrOutputWithContext(ctx context.Context) WebApplicationWaterfallSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationWaterfallSettingsOutput).ToWebApplicationWaterfallSettingsPtrOutputWithContext(ctx)
}

// WebApplicationWaterfallSettingsPtrInput is an input type that accepts WebApplicationWaterfallSettingsArgs, WebApplicationWaterfallSettingsPtr and WebApplicationWaterfallSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationWaterfallSettingsPtrInput` via:
//
//	        WebApplicationWaterfallSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationWaterfallSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationWaterfallSettingsPtrOutput() WebApplicationWaterfallSettingsPtrOutput
	ToWebApplicationWaterfallSettingsPtrOutputWithContext(context.Context) WebApplicationWaterfallSettingsPtrOutput
}

type webApplicationWaterfallSettingsPtrType WebApplicationWaterfallSettingsArgs

func WebApplicationWaterfallSettingsPtr(v *WebApplicationWaterfallSettingsArgs) WebApplicationWaterfallSettingsPtrInput {
	return (*webApplicationWaterfallSettingsPtrType)(v)
}

func (*webApplicationWaterfallSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationWaterfallSettings)(nil)).Elem()
}

func (i *webApplicationWaterfallSettingsPtrType) ToWebApplicationWaterfallSettingsPtrOutput() WebApplicationWaterfallSettingsPtrOutput {
	return i.ToWebApplicationWaterfallSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationWaterfallSettingsPtrType) ToWebApplicationWaterfallSettingsPtrOutputWithContext(ctx context.Context) WebApplicationWaterfallSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationWaterfallSettingsPtrOutput)
}

type WebApplicationWaterfallSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationWaterfallSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationWaterfallSettings)(nil)).Elem()
}

func (o WebApplicationWaterfallSettingsOutput) ToWebApplicationWaterfallSettingsOutput() WebApplicationWaterfallSettingsOutput {
	return o
}

func (o WebApplicationWaterfallSettingsOutput) ToWebApplicationWaterfallSettingsOutputWithContext(ctx context.Context) WebApplicationWaterfallSettingsOutput {
	return o
}

func (o WebApplicationWaterfallSettingsOutput) ToWebApplicationWaterfallSettingsPtrOutput() WebApplicationWaterfallSettingsPtrOutput {
	return o.ToWebApplicationWaterfallSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationWaterfallSettingsOutput) ToWebApplicationWaterfallSettingsPtrOutputWithContext(ctx context.Context) WebApplicationWaterfallSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationWaterfallSettings) *WebApplicationWaterfallSettings {
		return &v
	}).(WebApplicationWaterfallSettingsPtrOutput)
}

// Warn about resources with a lower browser cache rate above *X*%. Values between 1 and 100 are allowed.
func (o WebApplicationWaterfallSettingsOutput) ResourceBrowserCachingThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationWaterfallSettings) int { return v.ResourceBrowserCachingThreshold }).(pulumi.IntOutput)
}

// Warn about resources larger than *X* bytes. Values between 0 and 99999000 are allowed.
func (o WebApplicationWaterfallSettingsOutput) ResourcesThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationWaterfallSettings) int { return v.ResourcesThreshold }).(pulumi.IntOutput)
}

// Warn about slow CDN resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
func (o WebApplicationWaterfallSettingsOutput) SlowCndResourcesThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationWaterfallSettings) int { return v.SlowCndResourcesThreshold }).(pulumi.IntOutput)
}

// Warn about slow 1st party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
func (o WebApplicationWaterfallSettingsOutput) SlowFirstPartyResourcesThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationWaterfallSettings) int { return v.SlowFirstPartyResourcesThreshold }).(pulumi.IntOutput)
}

// Warn about slow 3rd party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
func (o WebApplicationWaterfallSettingsOutput) SlowThirdPartyResourcesThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationWaterfallSettings) int { return v.SlowThirdPartyResourcesThreshold }).(pulumi.IntOutput)
}

// Warn if Speed index exceeds *X* % of Visually complete. Values between 1 and 99 are allowed.
func (o WebApplicationWaterfallSettingsOutput) SpeedIndexVisuallyCompleteRatioThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationWaterfallSettings) int { return v.SpeedIndexVisuallyCompleteRatioThreshold }).(pulumi.IntOutput)
}

// Warn about uncompressed resources larger than *X* bytes. Values between 0 and 99999 are allowed.
func (o WebApplicationWaterfallSettingsOutput) UncompressedResourcesThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v WebApplicationWaterfallSettings) int { return v.UncompressedResourcesThreshold }).(pulumi.IntOutput)
}

type WebApplicationWaterfallSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationWaterfallSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationWaterfallSettings)(nil)).Elem()
}

func (o WebApplicationWaterfallSettingsPtrOutput) ToWebApplicationWaterfallSettingsPtrOutput() WebApplicationWaterfallSettingsPtrOutput {
	return o
}

func (o WebApplicationWaterfallSettingsPtrOutput) ToWebApplicationWaterfallSettingsPtrOutputWithContext(ctx context.Context) WebApplicationWaterfallSettingsPtrOutput {
	return o
}

func (o WebApplicationWaterfallSettingsPtrOutput) Elem() WebApplicationWaterfallSettingsOutput {
	return o.ApplyT(func(v *WebApplicationWaterfallSettings) WebApplicationWaterfallSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationWaterfallSettings
		return ret
	}).(WebApplicationWaterfallSettingsOutput)
}

// Warn about resources with a lower browser cache rate above *X*%. Values between 1 and 100 are allowed.
func (o WebApplicationWaterfallSettingsPtrOutput) ResourceBrowserCachingThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationWaterfallSettings) *int {
		if v == nil {
			return nil
		}
		return &v.ResourceBrowserCachingThreshold
	}).(pulumi.IntPtrOutput)
}

// Warn about resources larger than *X* bytes. Values between 0 and 99999000 are allowed.
func (o WebApplicationWaterfallSettingsPtrOutput) ResourcesThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationWaterfallSettings) *int {
		if v == nil {
			return nil
		}
		return &v.ResourcesThreshold
	}).(pulumi.IntPtrOutput)
}

// Warn about slow CDN resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
func (o WebApplicationWaterfallSettingsPtrOutput) SlowCndResourcesThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationWaterfallSettings) *int {
		if v == nil {
			return nil
		}
		return &v.SlowCndResourcesThreshold
	}).(pulumi.IntPtrOutput)
}

// Warn about slow 1st party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
func (o WebApplicationWaterfallSettingsPtrOutput) SlowFirstPartyResourcesThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationWaterfallSettings) *int {
		if v == nil {
			return nil
		}
		return &v.SlowFirstPartyResourcesThreshold
	}).(pulumi.IntPtrOutput)
}

// Warn about slow 3rd party resources with a response time above *X* ms. Values between 0 and 99999000 are allowed.
func (o WebApplicationWaterfallSettingsPtrOutput) SlowThirdPartyResourcesThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationWaterfallSettings) *int {
		if v == nil {
			return nil
		}
		return &v.SlowThirdPartyResourcesThreshold
	}).(pulumi.IntPtrOutput)
}

// Warn if Speed index exceeds *X* % of Visually complete. Values between 1 and 99 are allowed.
func (o WebApplicationWaterfallSettingsPtrOutput) SpeedIndexVisuallyCompleteRatioThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationWaterfallSettings) *int {
		if v == nil {
			return nil
		}
		return &v.SpeedIndexVisuallyCompleteRatioThreshold
	}).(pulumi.IntPtrOutput)
}

// Warn about uncompressed resources larger than *X* bytes. Values between 0 and 99999 are allowed.
func (o WebApplicationWaterfallSettingsPtrOutput) UncompressedResourcesThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationWaterfallSettings) *int {
		if v == nil {
			return nil
		}
		return &v.UncompressedResourcesThreshold
	}).(pulumi.IntPtrOutput)
}

type WebApplicationXhrActionApdexSettings struct {
	// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	FrustratingFallbackThreshold *int `pulumi:"frustratingFallbackThreshold"`
	// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	FrustratingThreshold *int `pulumi:"frustratingThreshold"`
	// no documentation available
	Threshold *int `pulumi:"threshold"`
	// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	ToleratedFallbackThreshold *int `pulumi:"toleratedFallbackThreshold"`
	// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	ToleratedThreshold *int `pulumi:"toleratedThreshold"`
}

// WebApplicationXhrActionApdexSettingsInput is an input type that accepts WebApplicationXhrActionApdexSettingsArgs and WebApplicationXhrActionApdexSettingsOutput values.
// You can construct a concrete instance of `WebApplicationXhrActionApdexSettingsInput` via:
//
//	WebApplicationXhrActionApdexSettingsArgs{...}
type WebApplicationXhrActionApdexSettingsInput interface {
	pulumi.Input

	ToWebApplicationXhrActionApdexSettingsOutput() WebApplicationXhrActionApdexSettingsOutput
	ToWebApplicationXhrActionApdexSettingsOutputWithContext(context.Context) WebApplicationXhrActionApdexSettingsOutput
}

type WebApplicationXhrActionApdexSettingsArgs struct {
	// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
	FrustratingFallbackThreshold pulumi.IntPtrInput `pulumi:"frustratingFallbackThreshold"`
	// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
	FrustratingThreshold pulumi.IntPtrInput `pulumi:"frustratingThreshold"`
	// no documentation available
	Threshold pulumi.IntPtrInput `pulumi:"threshold"`
	// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
	ToleratedFallbackThreshold pulumi.IntPtrInput `pulumi:"toleratedFallbackThreshold"`
	// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
	ToleratedThreshold pulumi.IntPtrInput `pulumi:"toleratedThreshold"`
}

func (WebApplicationXhrActionApdexSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationXhrActionApdexSettings)(nil)).Elem()
}

func (i WebApplicationXhrActionApdexSettingsArgs) ToWebApplicationXhrActionApdexSettingsOutput() WebApplicationXhrActionApdexSettingsOutput {
	return i.ToWebApplicationXhrActionApdexSettingsOutputWithContext(context.Background())
}

func (i WebApplicationXhrActionApdexSettingsArgs) ToWebApplicationXhrActionApdexSettingsOutputWithContext(ctx context.Context) WebApplicationXhrActionApdexSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationXhrActionApdexSettingsOutput)
}

func (i WebApplicationXhrActionApdexSettingsArgs) ToWebApplicationXhrActionApdexSettingsPtrOutput() WebApplicationXhrActionApdexSettingsPtrOutput {
	return i.ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(context.Background())
}

func (i WebApplicationXhrActionApdexSettingsArgs) ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationXhrActionApdexSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationXhrActionApdexSettingsOutput).ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(ctx)
}

// WebApplicationXhrActionApdexSettingsPtrInput is an input type that accepts WebApplicationXhrActionApdexSettingsArgs, WebApplicationXhrActionApdexSettingsPtr and WebApplicationXhrActionApdexSettingsPtrOutput values.
// You can construct a concrete instance of `WebApplicationXhrActionApdexSettingsPtrInput` via:
//
//	        WebApplicationXhrActionApdexSettingsArgs{...}
//
//	or:
//
//	        nil
type WebApplicationXhrActionApdexSettingsPtrInput interface {
	pulumi.Input

	ToWebApplicationXhrActionApdexSettingsPtrOutput() WebApplicationXhrActionApdexSettingsPtrOutput
	ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(context.Context) WebApplicationXhrActionApdexSettingsPtrOutput
}

type webApplicationXhrActionApdexSettingsPtrType WebApplicationXhrActionApdexSettingsArgs

func WebApplicationXhrActionApdexSettingsPtr(v *WebApplicationXhrActionApdexSettingsArgs) WebApplicationXhrActionApdexSettingsPtrInput {
	return (*webApplicationXhrActionApdexSettingsPtrType)(v)
}

func (*webApplicationXhrActionApdexSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationXhrActionApdexSettings)(nil)).Elem()
}

func (i *webApplicationXhrActionApdexSettingsPtrType) ToWebApplicationXhrActionApdexSettingsPtrOutput() WebApplicationXhrActionApdexSettingsPtrOutput {
	return i.ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(context.Background())
}

func (i *webApplicationXhrActionApdexSettingsPtrType) ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationXhrActionApdexSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebApplicationXhrActionApdexSettingsPtrOutput)
}

type WebApplicationXhrActionApdexSettingsOutput struct{ *pulumi.OutputState }

func (WebApplicationXhrActionApdexSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebApplicationXhrActionApdexSettings)(nil)).Elem()
}

func (o WebApplicationXhrActionApdexSettingsOutput) ToWebApplicationXhrActionApdexSettingsOutput() WebApplicationXhrActionApdexSettingsOutput {
	return o
}

func (o WebApplicationXhrActionApdexSettingsOutput) ToWebApplicationXhrActionApdexSettingsOutputWithContext(ctx context.Context) WebApplicationXhrActionApdexSettingsOutput {
	return o
}

func (o WebApplicationXhrActionApdexSettingsOutput) ToWebApplicationXhrActionApdexSettingsPtrOutput() WebApplicationXhrActionApdexSettingsPtrOutput {
	return o.ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(context.Background())
}

func (o WebApplicationXhrActionApdexSettingsOutput) ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationXhrActionApdexSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebApplicationXhrActionApdexSettings) *WebApplicationXhrActionApdexSettings {
		return &v
	}).(WebApplicationXhrActionApdexSettingsPtrOutput)
}

// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
func (o WebApplicationXhrActionApdexSettingsOutput) FrustratingFallbackThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationXhrActionApdexSettings) *int { return v.FrustratingFallbackThreshold }).(pulumi.IntPtrOutput)
}

// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
func (o WebApplicationXhrActionApdexSettingsOutput) FrustratingThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationXhrActionApdexSettings) *int { return v.FrustratingThreshold }).(pulumi.IntPtrOutput)
}

// no documentation available
func (o WebApplicationXhrActionApdexSettingsOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationXhrActionApdexSettings) *int { return v.Threshold }).(pulumi.IntPtrOutput)
}

// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
func (o WebApplicationXhrActionApdexSettingsOutput) ToleratedFallbackThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationXhrActionApdexSettings) *int { return v.ToleratedFallbackThreshold }).(pulumi.IntPtrOutput)
}

// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
func (o WebApplicationXhrActionApdexSettingsOutput) ToleratedThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WebApplicationXhrActionApdexSettings) *int { return v.ToleratedThreshold }).(pulumi.IntPtrOutput)
}

type WebApplicationXhrActionApdexSettingsPtrOutput struct{ *pulumi.OutputState }

func (WebApplicationXhrActionApdexSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebApplicationXhrActionApdexSettings)(nil)).Elem()
}

func (o WebApplicationXhrActionApdexSettingsPtrOutput) ToWebApplicationXhrActionApdexSettingsPtrOutput() WebApplicationXhrActionApdexSettingsPtrOutput {
	return o
}

func (o WebApplicationXhrActionApdexSettingsPtrOutput) ToWebApplicationXhrActionApdexSettingsPtrOutputWithContext(ctx context.Context) WebApplicationXhrActionApdexSettingsPtrOutput {
	return o
}

func (o WebApplicationXhrActionApdexSettingsPtrOutput) Elem() WebApplicationXhrActionApdexSettingsOutput {
	return o.ApplyT(func(v *WebApplicationXhrActionApdexSettings) WebApplicationXhrActionApdexSettings {
		if v != nil {
			return *v
		}
		var ret WebApplicationXhrActionApdexSettings
		return ret
	}).(WebApplicationXhrActionApdexSettingsOutput)
}

// Fallback threshold of an XHR action, defining a tolerable user experience, when the configured KPM is not available. Values between 0 and 240000 are allowed.
func (o WebApplicationXhrActionApdexSettingsPtrOutput) FrustratingFallbackThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationXhrActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return v.FrustratingFallbackThreshold
	}).(pulumi.IntPtrOutput)
}

// Maximal value of apdex, which is considered as tolerable user experience. Values between 0 and 240000 are allowed.
func (o WebApplicationXhrActionApdexSettingsPtrOutput) FrustratingThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationXhrActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return v.FrustratingThreshold
	}).(pulumi.IntPtrOutput)
}

// no documentation available
func (o WebApplicationXhrActionApdexSettingsPtrOutput) Threshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationXhrActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.IntPtrOutput)
}

// Fallback threshold of an XHR action, defining a satisfied user experience, when the configured KPM is not available. Values between 0 and 60000 are allowed.
func (o WebApplicationXhrActionApdexSettingsPtrOutput) ToleratedFallbackThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationXhrActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return v.ToleratedFallbackThreshold
	}).(pulumi.IntPtrOutput)
}

// Maximal value of apdex, which is considered as satisfied user experience. Values between 0 and 60000 are allowed.
func (o WebApplicationXhrActionApdexSettingsPtrOutput) ToleratedThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WebApplicationXhrActionApdexSettings) *int {
		if v == nil {
			return nil
		}
		return v.ToleratedThreshold
	}).(pulumi.IntPtrOutput)
}

type WebhookNotificationHeaders struct {
	// An additional HTTP Header to include when sending requests
	Headers []WebhookNotificationHeadersHeader `pulumi:"headers"`
}

// WebhookNotificationHeadersInput is an input type that accepts WebhookNotificationHeadersArgs and WebhookNotificationHeadersOutput values.
// You can construct a concrete instance of `WebhookNotificationHeadersInput` via:
//
//	WebhookNotificationHeadersArgs{...}
type WebhookNotificationHeadersInput interface {
	pulumi.Input

	ToWebhookNotificationHeadersOutput() WebhookNotificationHeadersOutput
	ToWebhookNotificationHeadersOutputWithContext(context.Context) WebhookNotificationHeadersOutput
}

type WebhookNotificationHeadersArgs struct {
	// An additional HTTP Header to include when sending requests
	Headers WebhookNotificationHeadersHeaderArrayInput `pulumi:"headers"`
}

func (WebhookNotificationHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookNotificationHeaders)(nil)).Elem()
}

func (i WebhookNotificationHeadersArgs) ToWebhookNotificationHeadersOutput() WebhookNotificationHeadersOutput {
	return i.ToWebhookNotificationHeadersOutputWithContext(context.Background())
}

func (i WebhookNotificationHeadersArgs) ToWebhookNotificationHeadersOutputWithContext(ctx context.Context) WebhookNotificationHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookNotificationHeadersOutput)
}

func (i WebhookNotificationHeadersArgs) ToWebhookNotificationHeadersPtrOutput() WebhookNotificationHeadersPtrOutput {
	return i.ToWebhookNotificationHeadersPtrOutputWithContext(context.Background())
}

func (i WebhookNotificationHeadersArgs) ToWebhookNotificationHeadersPtrOutputWithContext(ctx context.Context) WebhookNotificationHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookNotificationHeadersOutput).ToWebhookNotificationHeadersPtrOutputWithContext(ctx)
}

// WebhookNotificationHeadersPtrInput is an input type that accepts WebhookNotificationHeadersArgs, WebhookNotificationHeadersPtr and WebhookNotificationHeadersPtrOutput values.
// You can construct a concrete instance of `WebhookNotificationHeadersPtrInput` via:
//
//	        WebhookNotificationHeadersArgs{...}
//
//	or:
//
//	        nil
type WebhookNotificationHeadersPtrInput interface {
	pulumi.Input

	ToWebhookNotificationHeadersPtrOutput() WebhookNotificationHeadersPtrOutput
	ToWebhookNotificationHeadersPtrOutputWithContext(context.Context) WebhookNotificationHeadersPtrOutput
}

type webhookNotificationHeadersPtrType WebhookNotificationHeadersArgs

func WebhookNotificationHeadersPtr(v *WebhookNotificationHeadersArgs) WebhookNotificationHeadersPtrInput {
	return (*webhookNotificationHeadersPtrType)(v)
}

func (*webhookNotificationHeadersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookNotificationHeaders)(nil)).Elem()
}

func (i *webhookNotificationHeadersPtrType) ToWebhookNotificationHeadersPtrOutput() WebhookNotificationHeadersPtrOutput {
	return i.ToWebhookNotificationHeadersPtrOutputWithContext(context.Background())
}

func (i *webhookNotificationHeadersPtrType) ToWebhookNotificationHeadersPtrOutputWithContext(ctx context.Context) WebhookNotificationHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookNotificationHeadersPtrOutput)
}

type WebhookNotificationHeadersOutput struct{ *pulumi.OutputState }

func (WebhookNotificationHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookNotificationHeaders)(nil)).Elem()
}

func (o WebhookNotificationHeadersOutput) ToWebhookNotificationHeadersOutput() WebhookNotificationHeadersOutput {
	return o
}

func (o WebhookNotificationHeadersOutput) ToWebhookNotificationHeadersOutputWithContext(ctx context.Context) WebhookNotificationHeadersOutput {
	return o
}

func (o WebhookNotificationHeadersOutput) ToWebhookNotificationHeadersPtrOutput() WebhookNotificationHeadersPtrOutput {
	return o.ToWebhookNotificationHeadersPtrOutputWithContext(context.Background())
}

func (o WebhookNotificationHeadersOutput) ToWebhookNotificationHeadersPtrOutputWithContext(ctx context.Context) WebhookNotificationHeadersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebhookNotificationHeaders) *WebhookNotificationHeaders {
		return &v
	}).(WebhookNotificationHeadersPtrOutput)
}

// An additional HTTP Header to include when sending requests
func (o WebhookNotificationHeadersOutput) Headers() WebhookNotificationHeadersHeaderArrayOutput {
	return o.ApplyT(func(v WebhookNotificationHeaders) []WebhookNotificationHeadersHeader { return v.Headers }).(WebhookNotificationHeadersHeaderArrayOutput)
}

type WebhookNotificationHeadersPtrOutput struct{ *pulumi.OutputState }

func (WebhookNotificationHeadersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookNotificationHeaders)(nil)).Elem()
}

func (o WebhookNotificationHeadersPtrOutput) ToWebhookNotificationHeadersPtrOutput() WebhookNotificationHeadersPtrOutput {
	return o
}

func (o WebhookNotificationHeadersPtrOutput) ToWebhookNotificationHeadersPtrOutputWithContext(ctx context.Context) WebhookNotificationHeadersPtrOutput {
	return o
}

func (o WebhookNotificationHeadersPtrOutput) Elem() WebhookNotificationHeadersOutput {
	return o.ApplyT(func(v *WebhookNotificationHeaders) WebhookNotificationHeaders {
		if v != nil {
			return *v
		}
		var ret WebhookNotificationHeaders
		return ret
	}).(WebhookNotificationHeadersOutput)
}

// An additional HTTP Header to include when sending requests
func (o WebhookNotificationHeadersPtrOutput) Headers() WebhookNotificationHeadersHeaderArrayOutput {
	return o.ApplyT(func(v *WebhookNotificationHeaders) []WebhookNotificationHeadersHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(WebhookNotificationHeadersHeaderArrayOutput)
}

type WebhookNotificationHeadersHeader struct {
	// The name of the HTTP header
	Name string `pulumi:"name"`
	// The value of the HTTP header as a sensitive property. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
	SecretValue *string `pulumi:"secretValue"`
	// The value of the HTTP header. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
	Value *string `pulumi:"value"`
}

// WebhookNotificationHeadersHeaderInput is an input type that accepts WebhookNotificationHeadersHeaderArgs and WebhookNotificationHeadersHeaderOutput values.
// You can construct a concrete instance of `WebhookNotificationHeadersHeaderInput` via:
//
//	WebhookNotificationHeadersHeaderArgs{...}
type WebhookNotificationHeadersHeaderInput interface {
	pulumi.Input

	ToWebhookNotificationHeadersHeaderOutput() WebhookNotificationHeadersHeaderOutput
	ToWebhookNotificationHeadersHeaderOutputWithContext(context.Context) WebhookNotificationHeadersHeaderOutput
}

type WebhookNotificationHeadersHeaderArgs struct {
	// The name of the HTTP header
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the HTTP header as a sensitive property. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
	SecretValue pulumi.StringPtrInput `pulumi:"secretValue"`
	// The value of the HTTP header. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (WebhookNotificationHeadersHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookNotificationHeadersHeader)(nil)).Elem()
}

func (i WebhookNotificationHeadersHeaderArgs) ToWebhookNotificationHeadersHeaderOutput() WebhookNotificationHeadersHeaderOutput {
	return i.ToWebhookNotificationHeadersHeaderOutputWithContext(context.Background())
}

func (i WebhookNotificationHeadersHeaderArgs) ToWebhookNotificationHeadersHeaderOutputWithContext(ctx context.Context) WebhookNotificationHeadersHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookNotificationHeadersHeaderOutput)
}

// WebhookNotificationHeadersHeaderArrayInput is an input type that accepts WebhookNotificationHeadersHeaderArray and WebhookNotificationHeadersHeaderArrayOutput values.
// You can construct a concrete instance of `WebhookNotificationHeadersHeaderArrayInput` via:
//
//	WebhookNotificationHeadersHeaderArray{ WebhookNotificationHeadersHeaderArgs{...} }
type WebhookNotificationHeadersHeaderArrayInput interface {
	pulumi.Input

	ToWebhookNotificationHeadersHeaderArrayOutput() WebhookNotificationHeadersHeaderArrayOutput
	ToWebhookNotificationHeadersHeaderArrayOutputWithContext(context.Context) WebhookNotificationHeadersHeaderArrayOutput
}

type WebhookNotificationHeadersHeaderArray []WebhookNotificationHeadersHeaderInput

func (WebhookNotificationHeadersHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookNotificationHeadersHeader)(nil)).Elem()
}

func (i WebhookNotificationHeadersHeaderArray) ToWebhookNotificationHeadersHeaderArrayOutput() WebhookNotificationHeadersHeaderArrayOutput {
	return i.ToWebhookNotificationHeadersHeaderArrayOutputWithContext(context.Background())
}

func (i WebhookNotificationHeadersHeaderArray) ToWebhookNotificationHeadersHeaderArrayOutputWithContext(ctx context.Context) WebhookNotificationHeadersHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookNotificationHeadersHeaderArrayOutput)
}

type WebhookNotificationHeadersHeaderOutput struct{ *pulumi.OutputState }

func (WebhookNotificationHeadersHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookNotificationHeadersHeader)(nil)).Elem()
}

func (o WebhookNotificationHeadersHeaderOutput) ToWebhookNotificationHeadersHeaderOutput() WebhookNotificationHeadersHeaderOutput {
	return o
}

func (o WebhookNotificationHeadersHeaderOutput) ToWebhookNotificationHeadersHeaderOutputWithContext(ctx context.Context) WebhookNotificationHeadersHeaderOutput {
	return o
}

// The name of the HTTP header
func (o WebhookNotificationHeadersHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookNotificationHeadersHeader) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the HTTP header as a sensitive property. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
func (o WebhookNotificationHeadersHeaderOutput) SecretValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookNotificationHeadersHeader) *string { return v.SecretValue }).(pulumi.StringPtrOutput)
}

// The value of the HTTP header. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
func (o WebhookNotificationHeadersHeaderOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookNotificationHeadersHeader) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type WebhookNotificationHeadersHeaderArrayOutput struct{ *pulumi.OutputState }

func (WebhookNotificationHeadersHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookNotificationHeadersHeader)(nil)).Elem()
}

func (o WebhookNotificationHeadersHeaderArrayOutput) ToWebhookNotificationHeadersHeaderArrayOutput() WebhookNotificationHeadersHeaderArrayOutput {
	return o
}

func (o WebhookNotificationHeadersHeaderArrayOutput) ToWebhookNotificationHeadersHeaderArrayOutputWithContext(ctx context.Context) WebhookNotificationHeadersHeaderArrayOutput {
	return o
}

func (o WebhookNotificationHeadersHeaderArrayOutput) Index(i pulumi.IntInput) WebhookNotificationHeadersHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebhookNotificationHeadersHeader {
		return vs[0].([]WebhookNotificationHeadersHeader)[vs[1].(int)]
	}).(WebhookNotificationHeadersHeaderOutput)
}

type WebhookNotificationOauth2Credentials struct {
	// Access token URL
	AccessTokenUrl string `pulumi:"accessTokenUrl"`
	// Client ID
	ClientId string `pulumi:"clientId"`
	// Client secret
	ClientSecret string `pulumi:"clientSecret"`
	// The scope of access you are requesting
	Scope *string `pulumi:"scope"`
}

// WebhookNotificationOauth2CredentialsInput is an input type that accepts WebhookNotificationOauth2CredentialsArgs and WebhookNotificationOauth2CredentialsOutput values.
// You can construct a concrete instance of `WebhookNotificationOauth2CredentialsInput` via:
//
//	WebhookNotificationOauth2CredentialsArgs{...}
type WebhookNotificationOauth2CredentialsInput interface {
	pulumi.Input

	ToWebhookNotificationOauth2CredentialsOutput() WebhookNotificationOauth2CredentialsOutput
	ToWebhookNotificationOauth2CredentialsOutputWithContext(context.Context) WebhookNotificationOauth2CredentialsOutput
}

type WebhookNotificationOauth2CredentialsArgs struct {
	// Access token URL
	AccessTokenUrl pulumi.StringInput `pulumi:"accessTokenUrl"`
	// Client ID
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// Client secret
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// The scope of access you are requesting
	Scope pulumi.StringPtrInput `pulumi:"scope"`
}

func (WebhookNotificationOauth2CredentialsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookNotificationOauth2Credentials)(nil)).Elem()
}

func (i WebhookNotificationOauth2CredentialsArgs) ToWebhookNotificationOauth2CredentialsOutput() WebhookNotificationOauth2CredentialsOutput {
	return i.ToWebhookNotificationOauth2CredentialsOutputWithContext(context.Background())
}

func (i WebhookNotificationOauth2CredentialsArgs) ToWebhookNotificationOauth2CredentialsOutputWithContext(ctx context.Context) WebhookNotificationOauth2CredentialsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookNotificationOauth2CredentialsOutput)
}

func (i WebhookNotificationOauth2CredentialsArgs) ToWebhookNotificationOauth2CredentialsPtrOutput() WebhookNotificationOauth2CredentialsPtrOutput {
	return i.ToWebhookNotificationOauth2CredentialsPtrOutputWithContext(context.Background())
}

func (i WebhookNotificationOauth2CredentialsArgs) ToWebhookNotificationOauth2CredentialsPtrOutputWithContext(ctx context.Context) WebhookNotificationOauth2CredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookNotificationOauth2CredentialsOutput).ToWebhookNotificationOauth2CredentialsPtrOutputWithContext(ctx)
}

// WebhookNotificationOauth2CredentialsPtrInput is an input type that accepts WebhookNotificationOauth2CredentialsArgs, WebhookNotificationOauth2CredentialsPtr and WebhookNotificationOauth2CredentialsPtrOutput values.
// You can construct a concrete instance of `WebhookNotificationOauth2CredentialsPtrInput` via:
//
//	        WebhookNotificationOauth2CredentialsArgs{...}
//
//	or:
//
//	        nil
type WebhookNotificationOauth2CredentialsPtrInput interface {
	pulumi.Input

	ToWebhookNotificationOauth2CredentialsPtrOutput() WebhookNotificationOauth2CredentialsPtrOutput
	ToWebhookNotificationOauth2CredentialsPtrOutputWithContext(context.Context) WebhookNotificationOauth2CredentialsPtrOutput
}

type webhookNotificationOauth2CredentialsPtrType WebhookNotificationOauth2CredentialsArgs

func WebhookNotificationOauth2CredentialsPtr(v *WebhookNotificationOauth2CredentialsArgs) WebhookNotificationOauth2CredentialsPtrInput {
	return (*webhookNotificationOauth2CredentialsPtrType)(v)
}

func (*webhookNotificationOauth2CredentialsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookNotificationOauth2Credentials)(nil)).Elem()
}

func (i *webhookNotificationOauth2CredentialsPtrType) ToWebhookNotificationOauth2CredentialsPtrOutput() WebhookNotificationOauth2CredentialsPtrOutput {
	return i.ToWebhookNotificationOauth2CredentialsPtrOutputWithContext(context.Background())
}

func (i *webhookNotificationOauth2CredentialsPtrType) ToWebhookNotificationOauth2CredentialsPtrOutputWithContext(ctx context.Context) WebhookNotificationOauth2CredentialsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookNotificationOauth2CredentialsPtrOutput)
}

type WebhookNotificationOauth2CredentialsOutput struct{ *pulumi.OutputState }

func (WebhookNotificationOauth2CredentialsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookNotificationOauth2Credentials)(nil)).Elem()
}

func (o WebhookNotificationOauth2CredentialsOutput) ToWebhookNotificationOauth2CredentialsOutput() WebhookNotificationOauth2CredentialsOutput {
	return o
}

func (o WebhookNotificationOauth2CredentialsOutput) ToWebhookNotificationOauth2CredentialsOutputWithContext(ctx context.Context) WebhookNotificationOauth2CredentialsOutput {
	return o
}

func (o WebhookNotificationOauth2CredentialsOutput) ToWebhookNotificationOauth2CredentialsPtrOutput() WebhookNotificationOauth2CredentialsPtrOutput {
	return o.ToWebhookNotificationOauth2CredentialsPtrOutputWithContext(context.Background())
}

func (o WebhookNotificationOauth2CredentialsOutput) ToWebhookNotificationOauth2CredentialsPtrOutputWithContext(ctx context.Context) WebhookNotificationOauth2CredentialsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebhookNotificationOauth2Credentials) *WebhookNotificationOauth2Credentials {
		return &v
	}).(WebhookNotificationOauth2CredentialsPtrOutput)
}

// Access token URL
func (o WebhookNotificationOauth2CredentialsOutput) AccessTokenUrl() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookNotificationOauth2Credentials) string { return v.AccessTokenUrl }).(pulumi.StringOutput)
}

// Client ID
func (o WebhookNotificationOauth2CredentialsOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookNotificationOauth2Credentials) string { return v.ClientId }).(pulumi.StringOutput)
}

// Client secret
func (o WebhookNotificationOauth2CredentialsOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookNotificationOauth2Credentials) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// The scope of access you are requesting
func (o WebhookNotificationOauth2CredentialsOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookNotificationOauth2Credentials) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

type WebhookNotificationOauth2CredentialsPtrOutput struct{ *pulumi.OutputState }

func (WebhookNotificationOauth2CredentialsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookNotificationOauth2Credentials)(nil)).Elem()
}

func (o WebhookNotificationOauth2CredentialsPtrOutput) ToWebhookNotificationOauth2CredentialsPtrOutput() WebhookNotificationOauth2CredentialsPtrOutput {
	return o
}

func (o WebhookNotificationOauth2CredentialsPtrOutput) ToWebhookNotificationOauth2CredentialsPtrOutputWithContext(ctx context.Context) WebhookNotificationOauth2CredentialsPtrOutput {
	return o
}

func (o WebhookNotificationOauth2CredentialsPtrOutput) Elem() WebhookNotificationOauth2CredentialsOutput {
	return o.ApplyT(func(v *WebhookNotificationOauth2Credentials) WebhookNotificationOauth2Credentials {
		if v != nil {
			return *v
		}
		var ret WebhookNotificationOauth2Credentials
		return ret
	}).(WebhookNotificationOauth2CredentialsOutput)
}

// Access token URL
func (o WebhookNotificationOauth2CredentialsPtrOutput) AccessTokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookNotificationOauth2Credentials) *string {
		if v == nil {
			return nil
		}
		return &v.AccessTokenUrl
	}).(pulumi.StringPtrOutput)
}

// Client ID
func (o WebhookNotificationOauth2CredentialsPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookNotificationOauth2Credentials) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Client secret
func (o WebhookNotificationOauth2CredentialsPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookNotificationOauth2Credentials) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

// The scope of access you are requesting
func (o WebhookNotificationOauth2CredentialsPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookNotificationOauth2Credentials) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

type XmattersNotificationHeaders struct {
	// An additional HTTP Header to include when sending requests
	Headers []XmattersNotificationHeadersHeader `pulumi:"headers"`
}

// XmattersNotificationHeadersInput is an input type that accepts XmattersNotificationHeadersArgs and XmattersNotificationHeadersOutput values.
// You can construct a concrete instance of `XmattersNotificationHeadersInput` via:
//
//	XmattersNotificationHeadersArgs{...}
type XmattersNotificationHeadersInput interface {
	pulumi.Input

	ToXmattersNotificationHeadersOutput() XmattersNotificationHeadersOutput
	ToXmattersNotificationHeadersOutputWithContext(context.Context) XmattersNotificationHeadersOutput
}

type XmattersNotificationHeadersArgs struct {
	// An additional HTTP Header to include when sending requests
	Headers XmattersNotificationHeadersHeaderArrayInput `pulumi:"headers"`
}

func (XmattersNotificationHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*XmattersNotificationHeaders)(nil)).Elem()
}

func (i XmattersNotificationHeadersArgs) ToXmattersNotificationHeadersOutput() XmattersNotificationHeadersOutput {
	return i.ToXmattersNotificationHeadersOutputWithContext(context.Background())
}

func (i XmattersNotificationHeadersArgs) ToXmattersNotificationHeadersOutputWithContext(ctx context.Context) XmattersNotificationHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XmattersNotificationHeadersOutput)
}

func (i XmattersNotificationHeadersArgs) ToXmattersNotificationHeadersPtrOutput() XmattersNotificationHeadersPtrOutput {
	return i.ToXmattersNotificationHeadersPtrOutputWithContext(context.Background())
}

func (i XmattersNotificationHeadersArgs) ToXmattersNotificationHeadersPtrOutputWithContext(ctx context.Context) XmattersNotificationHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XmattersNotificationHeadersOutput).ToXmattersNotificationHeadersPtrOutputWithContext(ctx)
}

// XmattersNotificationHeadersPtrInput is an input type that accepts XmattersNotificationHeadersArgs, XmattersNotificationHeadersPtr and XmattersNotificationHeadersPtrOutput values.
// You can construct a concrete instance of `XmattersNotificationHeadersPtrInput` via:
//
//	        XmattersNotificationHeadersArgs{...}
//
//	or:
//
//	        nil
type XmattersNotificationHeadersPtrInput interface {
	pulumi.Input

	ToXmattersNotificationHeadersPtrOutput() XmattersNotificationHeadersPtrOutput
	ToXmattersNotificationHeadersPtrOutputWithContext(context.Context) XmattersNotificationHeadersPtrOutput
}

type xmattersNotificationHeadersPtrType XmattersNotificationHeadersArgs

func XmattersNotificationHeadersPtr(v *XmattersNotificationHeadersArgs) XmattersNotificationHeadersPtrInput {
	return (*xmattersNotificationHeadersPtrType)(v)
}

func (*xmattersNotificationHeadersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**XmattersNotificationHeaders)(nil)).Elem()
}

func (i *xmattersNotificationHeadersPtrType) ToXmattersNotificationHeadersPtrOutput() XmattersNotificationHeadersPtrOutput {
	return i.ToXmattersNotificationHeadersPtrOutputWithContext(context.Background())
}

func (i *xmattersNotificationHeadersPtrType) ToXmattersNotificationHeadersPtrOutputWithContext(ctx context.Context) XmattersNotificationHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XmattersNotificationHeadersPtrOutput)
}

type XmattersNotificationHeadersOutput struct{ *pulumi.OutputState }

func (XmattersNotificationHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*XmattersNotificationHeaders)(nil)).Elem()
}

func (o XmattersNotificationHeadersOutput) ToXmattersNotificationHeadersOutput() XmattersNotificationHeadersOutput {
	return o
}

func (o XmattersNotificationHeadersOutput) ToXmattersNotificationHeadersOutputWithContext(ctx context.Context) XmattersNotificationHeadersOutput {
	return o
}

func (o XmattersNotificationHeadersOutput) ToXmattersNotificationHeadersPtrOutput() XmattersNotificationHeadersPtrOutput {
	return o.ToXmattersNotificationHeadersPtrOutputWithContext(context.Background())
}

func (o XmattersNotificationHeadersOutput) ToXmattersNotificationHeadersPtrOutputWithContext(ctx context.Context) XmattersNotificationHeadersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v XmattersNotificationHeaders) *XmattersNotificationHeaders {
		return &v
	}).(XmattersNotificationHeadersPtrOutput)
}

// An additional HTTP Header to include when sending requests
func (o XmattersNotificationHeadersOutput) Headers() XmattersNotificationHeadersHeaderArrayOutput {
	return o.ApplyT(func(v XmattersNotificationHeaders) []XmattersNotificationHeadersHeader { return v.Headers }).(XmattersNotificationHeadersHeaderArrayOutput)
}

type XmattersNotificationHeadersPtrOutput struct{ *pulumi.OutputState }

func (XmattersNotificationHeadersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**XmattersNotificationHeaders)(nil)).Elem()
}

func (o XmattersNotificationHeadersPtrOutput) ToXmattersNotificationHeadersPtrOutput() XmattersNotificationHeadersPtrOutput {
	return o
}

func (o XmattersNotificationHeadersPtrOutput) ToXmattersNotificationHeadersPtrOutputWithContext(ctx context.Context) XmattersNotificationHeadersPtrOutput {
	return o
}

func (o XmattersNotificationHeadersPtrOutput) Elem() XmattersNotificationHeadersOutput {
	return o.ApplyT(func(v *XmattersNotificationHeaders) XmattersNotificationHeaders {
		if v != nil {
			return *v
		}
		var ret XmattersNotificationHeaders
		return ret
	}).(XmattersNotificationHeadersOutput)
}

// An additional HTTP Header to include when sending requests
func (o XmattersNotificationHeadersPtrOutput) Headers() XmattersNotificationHeadersHeaderArrayOutput {
	return o.ApplyT(func(v *XmattersNotificationHeaders) []XmattersNotificationHeadersHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(XmattersNotificationHeadersHeaderArrayOutput)
}

type XmattersNotificationHeadersHeader struct {
	// The name of the HTTP header
	Name string `pulumi:"name"`
	// The value of the HTTP header as a sensitive property. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
	SecretValue *string `pulumi:"secretValue"`
	// The value of the HTTP header. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
	Value *string `pulumi:"value"`
}

// XmattersNotificationHeadersHeaderInput is an input type that accepts XmattersNotificationHeadersHeaderArgs and XmattersNotificationHeadersHeaderOutput values.
// You can construct a concrete instance of `XmattersNotificationHeadersHeaderInput` via:
//
//	XmattersNotificationHeadersHeaderArgs{...}
type XmattersNotificationHeadersHeaderInput interface {
	pulumi.Input

	ToXmattersNotificationHeadersHeaderOutput() XmattersNotificationHeadersHeaderOutput
	ToXmattersNotificationHeadersHeaderOutputWithContext(context.Context) XmattersNotificationHeadersHeaderOutput
}

type XmattersNotificationHeadersHeaderArgs struct {
	// The name of the HTTP header
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the HTTP header as a sensitive property. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
	SecretValue pulumi.StringPtrInput `pulumi:"secretValue"`
	// The value of the HTTP header. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (XmattersNotificationHeadersHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*XmattersNotificationHeadersHeader)(nil)).Elem()
}

func (i XmattersNotificationHeadersHeaderArgs) ToXmattersNotificationHeadersHeaderOutput() XmattersNotificationHeadersHeaderOutput {
	return i.ToXmattersNotificationHeadersHeaderOutputWithContext(context.Background())
}

func (i XmattersNotificationHeadersHeaderArgs) ToXmattersNotificationHeadersHeaderOutputWithContext(ctx context.Context) XmattersNotificationHeadersHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XmattersNotificationHeadersHeaderOutput)
}

// XmattersNotificationHeadersHeaderArrayInput is an input type that accepts XmattersNotificationHeadersHeaderArray and XmattersNotificationHeadersHeaderArrayOutput values.
// You can construct a concrete instance of `XmattersNotificationHeadersHeaderArrayInput` via:
//
//	XmattersNotificationHeadersHeaderArray{ XmattersNotificationHeadersHeaderArgs{...} }
type XmattersNotificationHeadersHeaderArrayInput interface {
	pulumi.Input

	ToXmattersNotificationHeadersHeaderArrayOutput() XmattersNotificationHeadersHeaderArrayOutput
	ToXmattersNotificationHeadersHeaderArrayOutputWithContext(context.Context) XmattersNotificationHeadersHeaderArrayOutput
}

type XmattersNotificationHeadersHeaderArray []XmattersNotificationHeadersHeaderInput

func (XmattersNotificationHeadersHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]XmattersNotificationHeadersHeader)(nil)).Elem()
}

func (i XmattersNotificationHeadersHeaderArray) ToXmattersNotificationHeadersHeaderArrayOutput() XmattersNotificationHeadersHeaderArrayOutput {
	return i.ToXmattersNotificationHeadersHeaderArrayOutputWithContext(context.Background())
}

func (i XmattersNotificationHeadersHeaderArray) ToXmattersNotificationHeadersHeaderArrayOutputWithContext(ctx context.Context) XmattersNotificationHeadersHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(XmattersNotificationHeadersHeaderArrayOutput)
}

type XmattersNotificationHeadersHeaderOutput struct{ *pulumi.OutputState }

func (XmattersNotificationHeadersHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*XmattersNotificationHeadersHeader)(nil)).Elem()
}

func (o XmattersNotificationHeadersHeaderOutput) ToXmattersNotificationHeadersHeaderOutput() XmattersNotificationHeadersHeaderOutput {
	return o
}

func (o XmattersNotificationHeadersHeaderOutput) ToXmattersNotificationHeadersHeaderOutputWithContext(ctx context.Context) XmattersNotificationHeadersHeaderOutput {
	return o
}

// The name of the HTTP header
func (o XmattersNotificationHeadersHeaderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v XmattersNotificationHeadersHeader) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the HTTP header as a sensitive property. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
func (o XmattersNotificationHeadersHeaderOutput) SecretValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v XmattersNotificationHeadersHeader) *string { return v.SecretValue }).(pulumi.StringPtrOutput)
}

// The value of the HTTP header. May contain an empty value. `secretValue` and `value` are mutually exclusive. Only one of those two is allowed to be specified.
func (o XmattersNotificationHeadersHeaderOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v XmattersNotificationHeadersHeader) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type XmattersNotificationHeadersHeaderArrayOutput struct{ *pulumi.OutputState }

func (XmattersNotificationHeadersHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]XmattersNotificationHeadersHeader)(nil)).Elem()
}

func (o XmattersNotificationHeadersHeaderArrayOutput) ToXmattersNotificationHeadersHeaderArrayOutput() XmattersNotificationHeadersHeaderArrayOutput {
	return o
}

func (o XmattersNotificationHeadersHeaderArrayOutput) ToXmattersNotificationHeadersHeaderArrayOutputWithContext(ctx context.Context) XmattersNotificationHeadersHeaderArrayOutput {
	return o
}

func (o XmattersNotificationHeadersHeaderArrayOutput) Index(i pulumi.IntInput) XmattersNotificationHeadersHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) XmattersNotificationHeadersHeader {
		return vs[0].([]XmattersNotificationHeadersHeader)[vs[1].(int)]
	}).(XmattersNotificationHeadersHeaderOutput)
}

type GetAlertingProfilesValue struct {
	// The ID of the Alerting Profile when referred to as a Settings 2.0 resource (e.g. from within `SlackNotification`)
	Id string `pulumi:"id"`
	// The ID of the Alerting Profile when referred to as a Configuration API resource (e.g. from within `Notification`)
	LegacyId string `pulumi:"legacyId"`
	// The ID of the management zone to which the alerting profile applies (Settings 2.0)
	ManagementZoneId string `pulumi:"managementZoneId"`
	// The ID of the management zone to which the alerting profile applies (Configuration API)
	ManagementZoneLegacyId string `pulumi:"managementZoneLegacyId"`
	// The name of the Alerting Profile
	Name string `pulumi:"name"`
}

// GetAlertingProfilesValueInput is an input type that accepts GetAlertingProfilesValueArgs and GetAlertingProfilesValueOutput values.
// You can construct a concrete instance of `GetAlertingProfilesValueInput` via:
//
//	GetAlertingProfilesValueArgs{...}
type GetAlertingProfilesValueInput interface {
	pulumi.Input

	ToGetAlertingProfilesValueOutput() GetAlertingProfilesValueOutput
	ToGetAlertingProfilesValueOutputWithContext(context.Context) GetAlertingProfilesValueOutput
}

type GetAlertingProfilesValueArgs struct {
	// The ID of the Alerting Profile when referred to as a Settings 2.0 resource (e.g. from within `SlackNotification`)
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the Alerting Profile when referred to as a Configuration API resource (e.g. from within `Notification`)
	LegacyId pulumi.StringInput `pulumi:"legacyId"`
	// The ID of the management zone to which the alerting profile applies (Settings 2.0)
	ManagementZoneId pulumi.StringInput `pulumi:"managementZoneId"`
	// The ID of the management zone to which the alerting profile applies (Configuration API)
	ManagementZoneLegacyId pulumi.StringInput `pulumi:"managementZoneLegacyId"`
	// The name of the Alerting Profile
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAlertingProfilesValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertingProfilesValue)(nil)).Elem()
}

func (i GetAlertingProfilesValueArgs) ToGetAlertingProfilesValueOutput() GetAlertingProfilesValueOutput {
	return i.ToGetAlertingProfilesValueOutputWithContext(context.Background())
}

func (i GetAlertingProfilesValueArgs) ToGetAlertingProfilesValueOutputWithContext(ctx context.Context) GetAlertingProfilesValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertingProfilesValueOutput)
}

// GetAlertingProfilesValueArrayInput is an input type that accepts GetAlertingProfilesValueArray and GetAlertingProfilesValueArrayOutput values.
// You can construct a concrete instance of `GetAlertingProfilesValueArrayInput` via:
//
//	GetAlertingProfilesValueArray{ GetAlertingProfilesValueArgs{...} }
type GetAlertingProfilesValueArrayInput interface {
	pulumi.Input

	ToGetAlertingProfilesValueArrayOutput() GetAlertingProfilesValueArrayOutput
	ToGetAlertingProfilesValueArrayOutputWithContext(context.Context) GetAlertingProfilesValueArrayOutput
}

type GetAlertingProfilesValueArray []GetAlertingProfilesValueInput

func (GetAlertingProfilesValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertingProfilesValue)(nil)).Elem()
}

func (i GetAlertingProfilesValueArray) ToGetAlertingProfilesValueArrayOutput() GetAlertingProfilesValueArrayOutput {
	return i.ToGetAlertingProfilesValueArrayOutputWithContext(context.Background())
}

func (i GetAlertingProfilesValueArray) ToGetAlertingProfilesValueArrayOutputWithContext(ctx context.Context) GetAlertingProfilesValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertingProfilesValueArrayOutput)
}

type GetAlertingProfilesValueOutput struct{ *pulumi.OutputState }

func (GetAlertingProfilesValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertingProfilesValue)(nil)).Elem()
}

func (o GetAlertingProfilesValueOutput) ToGetAlertingProfilesValueOutput() GetAlertingProfilesValueOutput {
	return o
}

func (o GetAlertingProfilesValueOutput) ToGetAlertingProfilesValueOutputWithContext(ctx context.Context) GetAlertingProfilesValueOutput {
	return o
}

// The ID of the Alerting Profile when referred to as a Settings 2.0 resource (e.g. from within `SlackNotification`)
func (o GetAlertingProfilesValueOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingProfilesValue) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the Alerting Profile when referred to as a Configuration API resource (e.g. from within `Notification`)
func (o GetAlertingProfilesValueOutput) LegacyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingProfilesValue) string { return v.LegacyId }).(pulumi.StringOutput)
}

// The ID of the management zone to which the alerting profile applies (Settings 2.0)
func (o GetAlertingProfilesValueOutput) ManagementZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingProfilesValue) string { return v.ManagementZoneId }).(pulumi.StringOutput)
}

// The ID of the management zone to which the alerting profile applies (Configuration API)
func (o GetAlertingProfilesValueOutput) ManagementZoneLegacyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingProfilesValue) string { return v.ManagementZoneLegacyId }).(pulumi.StringOutput)
}

// The name of the Alerting Profile
func (o GetAlertingProfilesValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAlertingProfilesValue) string { return v.Name }).(pulumi.StringOutput)
}

type GetAlertingProfilesValueArrayOutput struct{ *pulumi.OutputState }

func (GetAlertingProfilesValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAlertingProfilesValue)(nil)).Elem()
}

func (o GetAlertingProfilesValueArrayOutput) ToGetAlertingProfilesValueArrayOutput() GetAlertingProfilesValueArrayOutput {
	return o
}

func (o GetAlertingProfilesValueArrayOutput) ToGetAlertingProfilesValueArrayOutputWithContext(ctx context.Context) GetAlertingProfilesValueArrayOutput {
	return o
}

func (o GetAlertingProfilesValueArrayOutput) Index(i pulumi.IntInput) GetAlertingProfilesValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAlertingProfilesValue {
		return vs[0].([]GetAlertingProfilesValue)[vs[1].(int)]
	}).(GetAlertingProfilesValueOutput)
}

type GetDocumentsValue struct {
	// The unique identifier of the document.
	Id string `pulumi:"id"`
	// The name of the document.
	Name string `pulumi:"name"`
	// The owner of the document. This could be a user or a group that has ownership rights over the document.
	Owner string `pulumi:"owner"`
	// The type of the document. This could be a specific format or category the document belongs to.
	Type string `pulumi:"type"`
}

// GetDocumentsValueInput is an input type that accepts GetDocumentsValueArgs and GetDocumentsValueOutput values.
// You can construct a concrete instance of `GetDocumentsValueInput` via:
//
//	GetDocumentsValueArgs{...}
type GetDocumentsValueInput interface {
	pulumi.Input

	ToGetDocumentsValueOutput() GetDocumentsValueOutput
	ToGetDocumentsValueOutputWithContext(context.Context) GetDocumentsValueOutput
}

type GetDocumentsValueArgs struct {
	// The unique identifier of the document.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the document.
	Name pulumi.StringInput `pulumi:"name"`
	// The owner of the document. This could be a user or a group that has ownership rights over the document.
	Owner pulumi.StringInput `pulumi:"owner"`
	// The type of the document. This could be a specific format or category the document belongs to.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDocumentsValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDocumentsValue)(nil)).Elem()
}

func (i GetDocumentsValueArgs) ToGetDocumentsValueOutput() GetDocumentsValueOutput {
	return i.ToGetDocumentsValueOutputWithContext(context.Background())
}

func (i GetDocumentsValueArgs) ToGetDocumentsValueOutputWithContext(ctx context.Context) GetDocumentsValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDocumentsValueOutput)
}

// GetDocumentsValueArrayInput is an input type that accepts GetDocumentsValueArray and GetDocumentsValueArrayOutput values.
// You can construct a concrete instance of `GetDocumentsValueArrayInput` via:
//
//	GetDocumentsValueArray{ GetDocumentsValueArgs{...} }
type GetDocumentsValueArrayInput interface {
	pulumi.Input

	ToGetDocumentsValueArrayOutput() GetDocumentsValueArrayOutput
	ToGetDocumentsValueArrayOutputWithContext(context.Context) GetDocumentsValueArrayOutput
}

type GetDocumentsValueArray []GetDocumentsValueInput

func (GetDocumentsValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDocumentsValue)(nil)).Elem()
}

func (i GetDocumentsValueArray) ToGetDocumentsValueArrayOutput() GetDocumentsValueArrayOutput {
	return i.ToGetDocumentsValueArrayOutputWithContext(context.Background())
}

func (i GetDocumentsValueArray) ToGetDocumentsValueArrayOutputWithContext(ctx context.Context) GetDocumentsValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDocumentsValueArrayOutput)
}

type GetDocumentsValueOutput struct{ *pulumi.OutputState }

func (GetDocumentsValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDocumentsValue)(nil)).Elem()
}

func (o GetDocumentsValueOutput) ToGetDocumentsValueOutput() GetDocumentsValueOutput {
	return o
}

func (o GetDocumentsValueOutput) ToGetDocumentsValueOutputWithContext(ctx context.Context) GetDocumentsValueOutput {
	return o
}

// The unique identifier of the document.
func (o GetDocumentsValueOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDocumentsValue) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the document.
func (o GetDocumentsValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDocumentsValue) string { return v.Name }).(pulumi.StringOutput)
}

// The owner of the document. This could be a user or a group that has ownership rights over the document.
func (o GetDocumentsValueOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v GetDocumentsValue) string { return v.Owner }).(pulumi.StringOutput)
}

// The type of the document. This could be a specific format or category the document belongs to.
func (o GetDocumentsValueOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDocumentsValue) string { return v.Type }).(pulumi.StringOutput)
}

type GetDocumentsValueArrayOutput struct{ *pulumi.OutputState }

func (GetDocumentsValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDocumentsValue)(nil)).Elem()
}

func (o GetDocumentsValueArrayOutput) ToGetDocumentsValueArrayOutput() GetDocumentsValueArrayOutput {
	return o
}

func (o GetDocumentsValueArrayOutput) ToGetDocumentsValueArrayOutputWithContext(ctx context.Context) GetDocumentsValueArrayOutput {
	return o
}

func (o GetDocumentsValueArrayOutput) Index(i pulumi.IntInput) GetDocumentsValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDocumentsValue {
		return vs[0].([]GetDocumentsValue)[vs[1].(int)]
	}).(GetDocumentsValueOutput)
}

type GetEntitiesEntity struct {
	// The name of the entity, displayed in the UI.
	DisplayName *string `pulumi:"displayName"`
	// The ID of the entity.
	EntityId *string `pulumi:"entityId"`
	// The timestamp at which the entity was last seen, in UTC milliseconds.
	LastSeenTms *int `pulumi:"lastSeenTms"`
	// Properties defining the entity.
	Properties map[string]string `pulumi:"properties"`
	// A set of tags assigned to the entity.
	Tags []GetEntitiesEntityTag `pulumi:"tags"`
	// The type of the entity.
	Type *string `pulumi:"type"`
}

// GetEntitiesEntityInput is an input type that accepts GetEntitiesEntityArgs and GetEntitiesEntityOutput values.
// You can construct a concrete instance of `GetEntitiesEntityInput` via:
//
//	GetEntitiesEntityArgs{...}
type GetEntitiesEntityInput interface {
	pulumi.Input

	ToGetEntitiesEntityOutput() GetEntitiesEntityOutput
	ToGetEntitiesEntityOutputWithContext(context.Context) GetEntitiesEntityOutput
}

type GetEntitiesEntityArgs struct {
	// The name of the entity, displayed in the UI.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// The ID of the entity.
	EntityId pulumi.StringPtrInput `pulumi:"entityId"`
	// The timestamp at which the entity was last seen, in UTC milliseconds.
	LastSeenTms pulumi.IntPtrInput `pulumi:"lastSeenTms"`
	// Properties defining the entity.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// A set of tags assigned to the entity.
	Tags GetEntitiesEntityTagArrayInput `pulumi:"tags"`
	// The type of the entity.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetEntitiesEntityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitiesEntity)(nil)).Elem()
}

func (i GetEntitiesEntityArgs) ToGetEntitiesEntityOutput() GetEntitiesEntityOutput {
	return i.ToGetEntitiesEntityOutputWithContext(context.Background())
}

func (i GetEntitiesEntityArgs) ToGetEntitiesEntityOutputWithContext(ctx context.Context) GetEntitiesEntityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitiesEntityOutput)
}

// GetEntitiesEntityArrayInput is an input type that accepts GetEntitiesEntityArray and GetEntitiesEntityArrayOutput values.
// You can construct a concrete instance of `GetEntitiesEntityArrayInput` via:
//
//	GetEntitiesEntityArray{ GetEntitiesEntityArgs{...} }
type GetEntitiesEntityArrayInput interface {
	pulumi.Input

	ToGetEntitiesEntityArrayOutput() GetEntitiesEntityArrayOutput
	ToGetEntitiesEntityArrayOutputWithContext(context.Context) GetEntitiesEntityArrayOutput
}

type GetEntitiesEntityArray []GetEntitiesEntityInput

func (GetEntitiesEntityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitiesEntity)(nil)).Elem()
}

func (i GetEntitiesEntityArray) ToGetEntitiesEntityArrayOutput() GetEntitiesEntityArrayOutput {
	return i.ToGetEntitiesEntityArrayOutputWithContext(context.Background())
}

func (i GetEntitiesEntityArray) ToGetEntitiesEntityArrayOutputWithContext(ctx context.Context) GetEntitiesEntityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitiesEntityArrayOutput)
}

type GetEntitiesEntityOutput struct{ *pulumi.OutputState }

func (GetEntitiesEntityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitiesEntity)(nil)).Elem()
}

func (o GetEntitiesEntityOutput) ToGetEntitiesEntityOutput() GetEntitiesEntityOutput {
	return o
}

func (o GetEntitiesEntityOutput) ToGetEntitiesEntityOutputWithContext(ctx context.Context) GetEntitiesEntityOutput {
	return o
}

// The name of the entity, displayed in the UI.
func (o GetEntitiesEntityOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEntitiesEntity) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// The ID of the entity.
func (o GetEntitiesEntityOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEntitiesEntity) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

// The timestamp at which the entity was last seen, in UTC milliseconds.
func (o GetEntitiesEntityOutput) LastSeenTms() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetEntitiesEntity) *int { return v.LastSeenTms }).(pulumi.IntPtrOutput)
}

// Properties defining the entity.
func (o GetEntitiesEntityOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetEntitiesEntity) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// A set of tags assigned to the entity.
func (o GetEntitiesEntityOutput) Tags() GetEntitiesEntityTagArrayOutput {
	return o.ApplyT(func(v GetEntitiesEntity) []GetEntitiesEntityTag { return v.Tags }).(GetEntitiesEntityTagArrayOutput)
}

// The type of the entity.
func (o GetEntitiesEntityOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEntitiesEntity) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GetEntitiesEntityArrayOutput struct{ *pulumi.OutputState }

func (GetEntitiesEntityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitiesEntity)(nil)).Elem()
}

func (o GetEntitiesEntityArrayOutput) ToGetEntitiesEntityArrayOutput() GetEntitiesEntityArrayOutput {
	return o
}

func (o GetEntitiesEntityArrayOutput) ToGetEntitiesEntityArrayOutputWithContext(ctx context.Context) GetEntitiesEntityArrayOutput {
	return o
}

func (o GetEntitiesEntityArrayOutput) Index(i pulumi.IntInput) GetEntitiesEntityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEntitiesEntity {
		return vs[0].([]GetEntitiesEntity)[vs[1].(int)]
	}).(GetEntitiesEntityOutput)
}

type GetEntitiesEntityTag struct {
	// A tag assigned to the entity
	Tags []GetEntitiesEntityTagTag `pulumi:"tags"`
}

// GetEntitiesEntityTagInput is an input type that accepts GetEntitiesEntityTagArgs and GetEntitiesEntityTagOutput values.
// You can construct a concrete instance of `GetEntitiesEntityTagInput` via:
//
//	GetEntitiesEntityTagArgs{...}
type GetEntitiesEntityTagInput interface {
	pulumi.Input

	ToGetEntitiesEntityTagOutput() GetEntitiesEntityTagOutput
	ToGetEntitiesEntityTagOutputWithContext(context.Context) GetEntitiesEntityTagOutput
}

type GetEntitiesEntityTagArgs struct {
	// A tag assigned to the entity
	Tags GetEntitiesEntityTagTagArrayInput `pulumi:"tags"`
}

func (GetEntitiesEntityTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitiesEntityTag)(nil)).Elem()
}

func (i GetEntitiesEntityTagArgs) ToGetEntitiesEntityTagOutput() GetEntitiesEntityTagOutput {
	return i.ToGetEntitiesEntityTagOutputWithContext(context.Background())
}

func (i GetEntitiesEntityTagArgs) ToGetEntitiesEntityTagOutputWithContext(ctx context.Context) GetEntitiesEntityTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitiesEntityTagOutput)
}

// GetEntitiesEntityTagArrayInput is an input type that accepts GetEntitiesEntityTagArray and GetEntitiesEntityTagArrayOutput values.
// You can construct a concrete instance of `GetEntitiesEntityTagArrayInput` via:
//
//	GetEntitiesEntityTagArray{ GetEntitiesEntityTagArgs{...} }
type GetEntitiesEntityTagArrayInput interface {
	pulumi.Input

	ToGetEntitiesEntityTagArrayOutput() GetEntitiesEntityTagArrayOutput
	ToGetEntitiesEntityTagArrayOutputWithContext(context.Context) GetEntitiesEntityTagArrayOutput
}

type GetEntitiesEntityTagArray []GetEntitiesEntityTagInput

func (GetEntitiesEntityTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitiesEntityTag)(nil)).Elem()
}

func (i GetEntitiesEntityTagArray) ToGetEntitiesEntityTagArrayOutput() GetEntitiesEntityTagArrayOutput {
	return i.ToGetEntitiesEntityTagArrayOutputWithContext(context.Background())
}

func (i GetEntitiesEntityTagArray) ToGetEntitiesEntityTagArrayOutputWithContext(ctx context.Context) GetEntitiesEntityTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitiesEntityTagArrayOutput)
}

type GetEntitiesEntityTagOutput struct{ *pulumi.OutputState }

func (GetEntitiesEntityTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitiesEntityTag)(nil)).Elem()
}

func (o GetEntitiesEntityTagOutput) ToGetEntitiesEntityTagOutput() GetEntitiesEntityTagOutput {
	return o
}

func (o GetEntitiesEntityTagOutput) ToGetEntitiesEntityTagOutputWithContext(ctx context.Context) GetEntitiesEntityTagOutput {
	return o
}

// A tag assigned to the entity
func (o GetEntitiesEntityTagOutput) Tags() GetEntitiesEntityTagTagArrayOutput {
	return o.ApplyT(func(v GetEntitiesEntityTag) []GetEntitiesEntityTagTag { return v.Tags }).(GetEntitiesEntityTagTagArrayOutput)
}

type GetEntitiesEntityTagArrayOutput struct{ *pulumi.OutputState }

func (GetEntitiesEntityTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitiesEntityTag)(nil)).Elem()
}

func (o GetEntitiesEntityTagArrayOutput) ToGetEntitiesEntityTagArrayOutput() GetEntitiesEntityTagArrayOutput {
	return o
}

func (o GetEntitiesEntityTagArrayOutput) ToGetEntitiesEntityTagArrayOutputWithContext(ctx context.Context) GetEntitiesEntityTagArrayOutput {
	return o
}

func (o GetEntitiesEntityTagArrayOutput) Index(i pulumi.IntInput) GetEntitiesEntityTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEntitiesEntityTag {
		return vs[0].([]GetEntitiesEntityTag)[vs[1].(int)]
	}).(GetEntitiesEntityTagOutput)
}

type GetEntitiesEntityTagTag struct {
	// The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the `CONTEXTLESS` value
	Context string `pulumi:"context"`
	// The key of the tag. Custom tags have the tag value here
	Key string `pulumi:"key"`
	// The string representation of the tag
	StringRepresentation *string `pulumi:"stringRepresentation"`
	// The value of the tag. Not applicable to custom tags
	Value *string `pulumi:"value"`
}

// GetEntitiesEntityTagTagInput is an input type that accepts GetEntitiesEntityTagTagArgs and GetEntitiesEntityTagTagOutput values.
// You can construct a concrete instance of `GetEntitiesEntityTagTagInput` via:
//
//	GetEntitiesEntityTagTagArgs{...}
type GetEntitiesEntityTagTagInput interface {
	pulumi.Input

	ToGetEntitiesEntityTagTagOutput() GetEntitiesEntityTagTagOutput
	ToGetEntitiesEntityTagTagOutputWithContext(context.Context) GetEntitiesEntityTagTagOutput
}

type GetEntitiesEntityTagTagArgs struct {
	// The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the `CONTEXTLESS` value
	Context pulumi.StringInput `pulumi:"context"`
	// The key of the tag. Custom tags have the tag value here
	Key pulumi.StringInput `pulumi:"key"`
	// The string representation of the tag
	StringRepresentation pulumi.StringPtrInput `pulumi:"stringRepresentation"`
	// The value of the tag. Not applicable to custom tags
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GetEntitiesEntityTagTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitiesEntityTagTag)(nil)).Elem()
}

func (i GetEntitiesEntityTagTagArgs) ToGetEntitiesEntityTagTagOutput() GetEntitiesEntityTagTagOutput {
	return i.ToGetEntitiesEntityTagTagOutputWithContext(context.Background())
}

func (i GetEntitiesEntityTagTagArgs) ToGetEntitiesEntityTagTagOutputWithContext(ctx context.Context) GetEntitiesEntityTagTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitiesEntityTagTagOutput)
}

// GetEntitiesEntityTagTagArrayInput is an input type that accepts GetEntitiesEntityTagTagArray and GetEntitiesEntityTagTagArrayOutput values.
// You can construct a concrete instance of `GetEntitiesEntityTagTagArrayInput` via:
//
//	GetEntitiesEntityTagTagArray{ GetEntitiesEntityTagTagArgs{...} }
type GetEntitiesEntityTagTagArrayInput interface {
	pulumi.Input

	ToGetEntitiesEntityTagTagArrayOutput() GetEntitiesEntityTagTagArrayOutput
	ToGetEntitiesEntityTagTagArrayOutputWithContext(context.Context) GetEntitiesEntityTagTagArrayOutput
}

type GetEntitiesEntityTagTagArray []GetEntitiesEntityTagTagInput

func (GetEntitiesEntityTagTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitiesEntityTagTag)(nil)).Elem()
}

func (i GetEntitiesEntityTagTagArray) ToGetEntitiesEntityTagTagArrayOutput() GetEntitiesEntityTagTagArrayOutput {
	return i.ToGetEntitiesEntityTagTagArrayOutputWithContext(context.Background())
}

func (i GetEntitiesEntityTagTagArray) ToGetEntitiesEntityTagTagArrayOutputWithContext(ctx context.Context) GetEntitiesEntityTagTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntitiesEntityTagTagArrayOutput)
}

type GetEntitiesEntityTagTagOutput struct{ *pulumi.OutputState }

func (GetEntitiesEntityTagTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntitiesEntityTagTag)(nil)).Elem()
}

func (o GetEntitiesEntityTagTagOutput) ToGetEntitiesEntityTagTagOutput() GetEntitiesEntityTagTagOutput {
	return o
}

func (o GetEntitiesEntityTagTagOutput) ToGetEntitiesEntityTagTagOutputWithContext(ctx context.Context) GetEntitiesEntityTagTagOutput {
	return o
}

// The origin of the tag, such as AWS or Cloud Foundry. Custom tags use the `CONTEXTLESS` value
func (o GetEntitiesEntityTagTagOutput) Context() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntitiesEntityTagTag) string { return v.Context }).(pulumi.StringOutput)
}

// The key of the tag. Custom tags have the tag value here
func (o GetEntitiesEntityTagTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntitiesEntityTagTag) string { return v.Key }).(pulumi.StringOutput)
}

// The string representation of the tag
func (o GetEntitiesEntityTagTagOutput) StringRepresentation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEntitiesEntityTagTag) *string { return v.StringRepresentation }).(pulumi.StringPtrOutput)
}

// The value of the tag. Not applicable to custom tags
func (o GetEntitiesEntityTagTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEntitiesEntityTagTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GetEntitiesEntityTagTagArrayOutput struct{ *pulumi.OutputState }

func (GetEntitiesEntityTagTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntitiesEntityTagTag)(nil)).Elem()
}

func (o GetEntitiesEntityTagTagArrayOutput) ToGetEntitiesEntityTagTagArrayOutput() GetEntitiesEntityTagTagArrayOutput {
	return o
}

func (o GetEntitiesEntityTagTagArrayOutput) ToGetEntitiesEntityTagTagArrayOutputWithContext(ctx context.Context) GetEntitiesEntityTagTagArrayOutput {
	return o
}

func (o GetEntitiesEntityTagTagArrayOutput) Index(i pulumi.IntInput) GetEntitiesEntityTagTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEntitiesEntityTagTag {
		return vs[0].([]GetEntitiesEntityTagTag)[vs[1].(int)]
	}).(GetEntitiesEntityTagTagOutput)
}

type GetHubItemsItem struct {
	// The activation link for a technology
	ActivationLink string `pulumi:"activationLink"`
	// The unique ID used by the artifacts contained in releases
	ArtifactId string `pulumi:"artifactId"`
	// URL for the author's logo
	AuthorLogo string `pulumi:"authorLogo"`
	// Name of the author of the item
	AuthorName string `pulumi:"authorName"`
	// Checks if the item is compatible with the cluster version
	ClusterCompatible bool `pulumi:"clusterCompatible"`
	// Whether or not the item is planned to be released soon
	ComingSoon bool `pulumi:"comingSoon"`
	// Description of the item
	Description string `pulumi:"description"`
	// An absolute link to the documentation page of this item
	DocumentationLink string `pulumi:"documentationLink"`
	// Whether or not the details call will contain description blocks
	HasDescriptionBlocks bool `pulumi:"hasDescriptionBlocks"`
	// Unique Id of the item
	ItemId string `pulumi:"itemId"`
	// The logo of the item. Can be a URL or Base64 encoded. Intended for HTML tags
	Logo string `pulumi:"logo"`
	// An absolute link to the marketing page of this item
	MarketingLink string `pulumi:"marketingLink"`
	// Name of the item
	Name string `pulumi:"name"`
	// The reason why the item is not compatible with the cluster version
	NotCompatibleReason string `pulumi:"notCompatibleReason"`
	// Grouping of items with keywords
	Tags []string `pulumi:"tags"`
	// Represents the type of item. It can be `TECHNOLOGY`, `EXTENSION1` or `EXTENSION2`
	Type string `pulumi:"type"`
}

// GetHubItemsItemInput is an input type that accepts GetHubItemsItemArgs and GetHubItemsItemOutput values.
// You can construct a concrete instance of `GetHubItemsItemInput` via:
//
//	GetHubItemsItemArgs{...}
type GetHubItemsItemInput interface {
	pulumi.Input

	ToGetHubItemsItemOutput() GetHubItemsItemOutput
	ToGetHubItemsItemOutputWithContext(context.Context) GetHubItemsItemOutput
}

type GetHubItemsItemArgs struct {
	// The activation link for a technology
	ActivationLink pulumi.StringInput `pulumi:"activationLink"`
	// The unique ID used by the artifacts contained in releases
	ArtifactId pulumi.StringInput `pulumi:"artifactId"`
	// URL for the author's logo
	AuthorLogo pulumi.StringInput `pulumi:"authorLogo"`
	// Name of the author of the item
	AuthorName pulumi.StringInput `pulumi:"authorName"`
	// Checks if the item is compatible with the cluster version
	ClusterCompatible pulumi.BoolInput `pulumi:"clusterCompatible"`
	// Whether or not the item is planned to be released soon
	ComingSoon pulumi.BoolInput `pulumi:"comingSoon"`
	// Description of the item
	Description pulumi.StringInput `pulumi:"description"`
	// An absolute link to the documentation page of this item
	DocumentationLink pulumi.StringInput `pulumi:"documentationLink"`
	// Whether or not the details call will contain description blocks
	HasDescriptionBlocks pulumi.BoolInput `pulumi:"hasDescriptionBlocks"`
	// Unique Id of the item
	ItemId pulumi.StringInput `pulumi:"itemId"`
	// The logo of the item. Can be a URL or Base64 encoded. Intended for HTML tags
	Logo pulumi.StringInput `pulumi:"logo"`
	// An absolute link to the marketing page of this item
	MarketingLink pulumi.StringInput `pulumi:"marketingLink"`
	// Name of the item
	Name pulumi.StringInput `pulumi:"name"`
	// The reason why the item is not compatible with the cluster version
	NotCompatibleReason pulumi.StringInput `pulumi:"notCompatibleReason"`
	// Grouping of items with keywords
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// Represents the type of item. It can be `TECHNOLOGY`, `EXTENSION1` or `EXTENSION2`
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetHubItemsItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHubItemsItem)(nil)).Elem()
}

func (i GetHubItemsItemArgs) ToGetHubItemsItemOutput() GetHubItemsItemOutput {
	return i.ToGetHubItemsItemOutputWithContext(context.Background())
}

func (i GetHubItemsItemArgs) ToGetHubItemsItemOutputWithContext(ctx context.Context) GetHubItemsItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHubItemsItemOutput)
}

// GetHubItemsItemArrayInput is an input type that accepts GetHubItemsItemArray and GetHubItemsItemArrayOutput values.
// You can construct a concrete instance of `GetHubItemsItemArrayInput` via:
//
//	GetHubItemsItemArray{ GetHubItemsItemArgs{...} }
type GetHubItemsItemArrayInput interface {
	pulumi.Input

	ToGetHubItemsItemArrayOutput() GetHubItemsItemArrayOutput
	ToGetHubItemsItemArrayOutputWithContext(context.Context) GetHubItemsItemArrayOutput
}

type GetHubItemsItemArray []GetHubItemsItemInput

func (GetHubItemsItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHubItemsItem)(nil)).Elem()
}

func (i GetHubItemsItemArray) ToGetHubItemsItemArrayOutput() GetHubItemsItemArrayOutput {
	return i.ToGetHubItemsItemArrayOutputWithContext(context.Background())
}

func (i GetHubItemsItemArray) ToGetHubItemsItemArrayOutputWithContext(ctx context.Context) GetHubItemsItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHubItemsItemArrayOutput)
}

type GetHubItemsItemOutput struct{ *pulumi.OutputState }

func (GetHubItemsItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHubItemsItem)(nil)).Elem()
}

func (o GetHubItemsItemOutput) ToGetHubItemsItemOutput() GetHubItemsItemOutput {
	return o
}

func (o GetHubItemsItemOutput) ToGetHubItemsItemOutputWithContext(ctx context.Context) GetHubItemsItemOutput {
	return o
}

// The activation link for a technology
func (o GetHubItemsItemOutput) ActivationLink() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.ActivationLink }).(pulumi.StringOutput)
}

// The unique ID used by the artifacts contained in releases
func (o GetHubItemsItemOutput) ArtifactId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.ArtifactId }).(pulumi.StringOutput)
}

// URL for the author's logo
func (o GetHubItemsItemOutput) AuthorLogo() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.AuthorLogo }).(pulumi.StringOutput)
}

// Name of the author of the item
func (o GetHubItemsItemOutput) AuthorName() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.AuthorName }).(pulumi.StringOutput)
}

// Checks if the item is compatible with the cluster version
func (o GetHubItemsItemOutput) ClusterCompatible() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHubItemsItem) bool { return v.ClusterCompatible }).(pulumi.BoolOutput)
}

// Whether or not the item is planned to be released soon
func (o GetHubItemsItemOutput) ComingSoon() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHubItemsItem) bool { return v.ComingSoon }).(pulumi.BoolOutput)
}

// Description of the item
func (o GetHubItemsItemOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.Description }).(pulumi.StringOutput)
}

// An absolute link to the documentation page of this item
func (o GetHubItemsItemOutput) DocumentationLink() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.DocumentationLink }).(pulumi.StringOutput)
}

// Whether or not the details call will contain description blocks
func (o GetHubItemsItemOutput) HasDescriptionBlocks() pulumi.BoolOutput {
	return o.ApplyT(func(v GetHubItemsItem) bool { return v.HasDescriptionBlocks }).(pulumi.BoolOutput)
}

// Unique Id of the item
func (o GetHubItemsItemOutput) ItemId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.ItemId }).(pulumi.StringOutput)
}

// The logo of the item. Can be a URL or Base64 encoded. Intended for HTML tags
func (o GetHubItemsItemOutput) Logo() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.Logo }).(pulumi.StringOutput)
}

// An absolute link to the marketing page of this item
func (o GetHubItemsItemOutput) MarketingLink() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.MarketingLink }).(pulumi.StringOutput)
}

// Name of the item
func (o GetHubItemsItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.Name }).(pulumi.StringOutput)
}

// The reason why the item is not compatible with the cluster version
func (o GetHubItemsItemOutput) NotCompatibleReason() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.NotCompatibleReason }).(pulumi.StringOutput)
}

// Grouping of items with keywords
func (o GetHubItemsItemOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetHubItemsItem) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// Represents the type of item. It can be `TECHNOLOGY`, `EXTENSION1` or `EXTENSION2`
func (o GetHubItemsItemOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetHubItemsItem) string { return v.Type }).(pulumi.StringOutput)
}

type GetHubItemsItemArrayOutput struct{ *pulumi.OutputState }

func (GetHubItemsItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetHubItemsItem)(nil)).Elem()
}

func (o GetHubItemsItemArrayOutput) ToGetHubItemsItemArrayOutput() GetHubItemsItemArrayOutput {
	return o
}

func (o GetHubItemsItemArrayOutput) ToGetHubItemsItemArrayOutputWithContext(ctx context.Context) GetHubItemsItemArrayOutput {
	return o
}

func (o GetHubItemsItemArrayOutput) Index(i pulumi.IntInput) GetHubItemsItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetHubItemsItem {
		return vs[0].([]GetHubItemsItem)[vs[1].(int)]
	}).(GetHubItemsItemOutput)
}

type GetIamPoliciesPolicy struct {
	// The account UUID the policy is defined for
	Account *string `pulumi:"account"`
	// The environment ID the policy is defined for
	Environment *string `pulumi:"environment"`
	// `true` if this is a global policy`
	Global *bool  `pulumi:"global"`
	Id     string `pulumi:"id"`
	// The name of the policy
	Name string `pulumi:"name"`
	// The UUID of the policy
	Uuid string `pulumi:"uuid"`
}

// GetIamPoliciesPolicyInput is an input type that accepts GetIamPoliciesPolicyArgs and GetIamPoliciesPolicyOutput values.
// You can construct a concrete instance of `GetIamPoliciesPolicyInput` via:
//
//	GetIamPoliciesPolicyArgs{...}
type GetIamPoliciesPolicyInput interface {
	pulumi.Input

	ToGetIamPoliciesPolicyOutput() GetIamPoliciesPolicyOutput
	ToGetIamPoliciesPolicyOutputWithContext(context.Context) GetIamPoliciesPolicyOutput
}

type GetIamPoliciesPolicyArgs struct {
	// The account UUID the policy is defined for
	Account pulumi.StringPtrInput `pulumi:"account"`
	// The environment ID the policy is defined for
	Environment pulumi.StringPtrInput `pulumi:"environment"`
	// `true` if this is a global policy`
	Global pulumi.BoolPtrInput `pulumi:"global"`
	Id     pulumi.StringInput  `pulumi:"id"`
	// The name of the policy
	Name pulumi.StringInput `pulumi:"name"`
	// The UUID of the policy
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (GetIamPoliciesPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamPoliciesPolicy)(nil)).Elem()
}

func (i GetIamPoliciesPolicyArgs) ToGetIamPoliciesPolicyOutput() GetIamPoliciesPolicyOutput {
	return i.ToGetIamPoliciesPolicyOutputWithContext(context.Background())
}

func (i GetIamPoliciesPolicyArgs) ToGetIamPoliciesPolicyOutputWithContext(ctx context.Context) GetIamPoliciesPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamPoliciesPolicyOutput)
}

// GetIamPoliciesPolicyArrayInput is an input type that accepts GetIamPoliciesPolicyArray and GetIamPoliciesPolicyArrayOutput values.
// You can construct a concrete instance of `GetIamPoliciesPolicyArrayInput` via:
//
//	GetIamPoliciesPolicyArray{ GetIamPoliciesPolicyArgs{...} }
type GetIamPoliciesPolicyArrayInput interface {
	pulumi.Input

	ToGetIamPoliciesPolicyArrayOutput() GetIamPoliciesPolicyArrayOutput
	ToGetIamPoliciesPolicyArrayOutputWithContext(context.Context) GetIamPoliciesPolicyArrayOutput
}

type GetIamPoliciesPolicyArray []GetIamPoliciesPolicyInput

func (GetIamPoliciesPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIamPoliciesPolicy)(nil)).Elem()
}

func (i GetIamPoliciesPolicyArray) ToGetIamPoliciesPolicyArrayOutput() GetIamPoliciesPolicyArrayOutput {
	return i.ToGetIamPoliciesPolicyArrayOutputWithContext(context.Background())
}

func (i GetIamPoliciesPolicyArray) ToGetIamPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetIamPoliciesPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetIamPoliciesPolicyArrayOutput)
}

type GetIamPoliciesPolicyOutput struct{ *pulumi.OutputState }

func (GetIamPoliciesPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIamPoliciesPolicy)(nil)).Elem()
}

func (o GetIamPoliciesPolicyOutput) ToGetIamPoliciesPolicyOutput() GetIamPoliciesPolicyOutput {
	return o
}

func (o GetIamPoliciesPolicyOutput) ToGetIamPoliciesPolicyOutputWithContext(ctx context.Context) GetIamPoliciesPolicyOutput {
	return o
}

// The account UUID the policy is defined for
func (o GetIamPoliciesPolicyOutput) Account() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIamPoliciesPolicy) *string { return v.Account }).(pulumi.StringPtrOutput)
}

// The environment ID the policy is defined for
func (o GetIamPoliciesPolicyOutput) Environment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIamPoliciesPolicy) *string { return v.Environment }).(pulumi.StringPtrOutput)
}

// `true` if this is a global policy`
func (o GetIamPoliciesPolicyOutput) Global() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetIamPoliciesPolicy) *bool { return v.Global }).(pulumi.BoolPtrOutput)
}

func (o GetIamPoliciesPolicyOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamPoliciesPolicy) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the policy
func (o GetIamPoliciesPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamPoliciesPolicy) string { return v.Name }).(pulumi.StringOutput)
}

// The UUID of the policy
func (o GetIamPoliciesPolicyOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetIamPoliciesPolicy) string { return v.Uuid }).(pulumi.StringOutput)
}

type GetIamPoliciesPolicyArrayOutput struct{ *pulumi.OutputState }

func (GetIamPoliciesPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetIamPoliciesPolicy)(nil)).Elem()
}

func (o GetIamPoliciesPolicyArrayOutput) ToGetIamPoliciesPolicyArrayOutput() GetIamPoliciesPolicyArrayOutput {
	return o
}

func (o GetIamPoliciesPolicyArrayOutput) ToGetIamPoliciesPolicyArrayOutputWithContext(ctx context.Context) GetIamPoliciesPolicyArrayOutput {
	return o
}

func (o GetIamPoliciesPolicyArrayOutput) Index(i pulumi.IntInput) GetIamPoliciesPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetIamPoliciesPolicy {
		return vs[0].([]GetIamPoliciesPolicy)[vs[1].(int)]
	}).(GetIamPoliciesPolicyOutput)
}

type GetManagementZonesValue struct {
	// The description of the Management Zone
	Description string `pulumi:"description"`
	// The ID of the Management Zone when referred to as a Settings 2.0 resource (e.g. from within `SlackNotification`)
	Id string `pulumi:"id"`
	// The ID of the Management Zone when referred to as a Configuration API resource (e.g. from within `Notification`)
	LegacyId string `pulumi:"legacyId"`
	// The name of the Management Zone
	Name string `pulumi:"name"`
}

// GetManagementZonesValueInput is an input type that accepts GetManagementZonesValueArgs and GetManagementZonesValueOutput values.
// You can construct a concrete instance of `GetManagementZonesValueInput` via:
//
//	GetManagementZonesValueArgs{...}
type GetManagementZonesValueInput interface {
	pulumi.Input

	ToGetManagementZonesValueOutput() GetManagementZonesValueOutput
	ToGetManagementZonesValueOutputWithContext(context.Context) GetManagementZonesValueOutput
}

type GetManagementZonesValueArgs struct {
	// The description of the Management Zone
	Description pulumi.StringInput `pulumi:"description"`
	// The ID of the Management Zone when referred to as a Settings 2.0 resource (e.g. from within `SlackNotification`)
	Id pulumi.StringInput `pulumi:"id"`
	// The ID of the Management Zone when referred to as a Configuration API resource (e.g. from within `Notification`)
	LegacyId pulumi.StringInput `pulumi:"legacyId"`
	// The name of the Management Zone
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetManagementZonesValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementZonesValue)(nil)).Elem()
}

func (i GetManagementZonesValueArgs) ToGetManagementZonesValueOutput() GetManagementZonesValueOutput {
	return i.ToGetManagementZonesValueOutputWithContext(context.Background())
}

func (i GetManagementZonesValueArgs) ToGetManagementZonesValueOutputWithContext(ctx context.Context) GetManagementZonesValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementZonesValueOutput)
}

// GetManagementZonesValueArrayInput is an input type that accepts GetManagementZonesValueArray and GetManagementZonesValueArrayOutput values.
// You can construct a concrete instance of `GetManagementZonesValueArrayInput` via:
//
//	GetManagementZonesValueArray{ GetManagementZonesValueArgs{...} }
type GetManagementZonesValueArrayInput interface {
	pulumi.Input

	ToGetManagementZonesValueArrayOutput() GetManagementZonesValueArrayOutput
	ToGetManagementZonesValueArrayOutputWithContext(context.Context) GetManagementZonesValueArrayOutput
}

type GetManagementZonesValueArray []GetManagementZonesValueInput

func (GetManagementZonesValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagementZonesValue)(nil)).Elem()
}

func (i GetManagementZonesValueArray) ToGetManagementZonesValueArrayOutput() GetManagementZonesValueArrayOutput {
	return i.ToGetManagementZonesValueArrayOutputWithContext(context.Background())
}

func (i GetManagementZonesValueArray) ToGetManagementZonesValueArrayOutputWithContext(ctx context.Context) GetManagementZonesValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetManagementZonesValueArrayOutput)
}

type GetManagementZonesValueOutput struct{ *pulumi.OutputState }

func (GetManagementZonesValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetManagementZonesValue)(nil)).Elem()
}

func (o GetManagementZonesValueOutput) ToGetManagementZonesValueOutput() GetManagementZonesValueOutput {
	return o
}

func (o GetManagementZonesValueOutput) ToGetManagementZonesValueOutputWithContext(ctx context.Context) GetManagementZonesValueOutput {
	return o
}

// The description of the Management Zone
func (o GetManagementZonesValueOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagementZonesValue) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the Management Zone when referred to as a Settings 2.0 resource (e.g. from within `SlackNotification`)
func (o GetManagementZonesValueOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagementZonesValue) string { return v.Id }).(pulumi.StringOutput)
}

// The ID of the Management Zone when referred to as a Configuration API resource (e.g. from within `Notification`)
func (o GetManagementZonesValueOutput) LegacyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagementZonesValue) string { return v.LegacyId }).(pulumi.StringOutput)
}

// The name of the Management Zone
func (o GetManagementZonesValueOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetManagementZonesValue) string { return v.Name }).(pulumi.StringOutput)
}

type GetManagementZonesValueArrayOutput struct{ *pulumi.OutputState }

func (GetManagementZonesValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetManagementZonesValue)(nil)).Elem()
}

func (o GetManagementZonesValueArrayOutput) ToGetManagementZonesValueArrayOutput() GetManagementZonesValueArrayOutput {
	return o
}

func (o GetManagementZonesValueArrayOutput) ToGetManagementZonesValueArrayOutputWithContext(ctx context.Context) GetManagementZonesValueArrayOutput {
	return o
}

func (o GetManagementZonesValueArrayOutput) Index(i pulumi.IntInput) GetManagementZonesValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetManagementZonesValue {
		return vs[0].([]GetManagementZonesValue)[vs[1].(int)]
	}).(GetManagementZonesValueOutput)
}

type GetRemoteEnvironmentsRemoteEnvironment struct {
	// Name
	Name string `pulumi:"name"`
	// Possible Values: `CLUSTER`, `EXTERNAL`, `INTERNAL`
	NetworkScope string `pulumi:"networkScope"`
	// Provide a valid token created on the remote environment.
	Token string `pulumi:"token"`
	// Specify the full URI to the remote environment. Your local environment will have to be able to connect this URI on a network level.
	Uri string `pulumi:"uri"`
}

// GetRemoteEnvironmentsRemoteEnvironmentInput is an input type that accepts GetRemoteEnvironmentsRemoteEnvironmentArgs and GetRemoteEnvironmentsRemoteEnvironmentOutput values.
// You can construct a concrete instance of `GetRemoteEnvironmentsRemoteEnvironmentInput` via:
//
//	GetRemoteEnvironmentsRemoteEnvironmentArgs{...}
type GetRemoteEnvironmentsRemoteEnvironmentInput interface {
	pulumi.Input

	ToGetRemoteEnvironmentsRemoteEnvironmentOutput() GetRemoteEnvironmentsRemoteEnvironmentOutput
	ToGetRemoteEnvironmentsRemoteEnvironmentOutputWithContext(context.Context) GetRemoteEnvironmentsRemoteEnvironmentOutput
}

type GetRemoteEnvironmentsRemoteEnvironmentArgs struct {
	// Name
	Name pulumi.StringInput `pulumi:"name"`
	// Possible Values: `CLUSTER`, `EXTERNAL`, `INTERNAL`
	NetworkScope pulumi.StringInput `pulumi:"networkScope"`
	// Provide a valid token created on the remote environment.
	Token pulumi.StringInput `pulumi:"token"`
	// Specify the full URI to the remote environment. Your local environment will have to be able to connect this URI on a network level.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (GetRemoteEnvironmentsRemoteEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRemoteEnvironmentsRemoteEnvironment)(nil)).Elem()
}

func (i GetRemoteEnvironmentsRemoteEnvironmentArgs) ToGetRemoteEnvironmentsRemoteEnvironmentOutput() GetRemoteEnvironmentsRemoteEnvironmentOutput {
	return i.ToGetRemoteEnvironmentsRemoteEnvironmentOutputWithContext(context.Background())
}

func (i GetRemoteEnvironmentsRemoteEnvironmentArgs) ToGetRemoteEnvironmentsRemoteEnvironmentOutputWithContext(ctx context.Context) GetRemoteEnvironmentsRemoteEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRemoteEnvironmentsRemoteEnvironmentOutput)
}

// GetRemoteEnvironmentsRemoteEnvironmentArrayInput is an input type that accepts GetRemoteEnvironmentsRemoteEnvironmentArray and GetRemoteEnvironmentsRemoteEnvironmentArrayOutput values.
// You can construct a concrete instance of `GetRemoteEnvironmentsRemoteEnvironmentArrayInput` via:
//
//	GetRemoteEnvironmentsRemoteEnvironmentArray{ GetRemoteEnvironmentsRemoteEnvironmentArgs{...} }
type GetRemoteEnvironmentsRemoteEnvironmentArrayInput interface {
	pulumi.Input

	ToGetRemoteEnvironmentsRemoteEnvironmentArrayOutput() GetRemoteEnvironmentsRemoteEnvironmentArrayOutput
	ToGetRemoteEnvironmentsRemoteEnvironmentArrayOutputWithContext(context.Context) GetRemoteEnvironmentsRemoteEnvironmentArrayOutput
}

type GetRemoteEnvironmentsRemoteEnvironmentArray []GetRemoteEnvironmentsRemoteEnvironmentInput

func (GetRemoteEnvironmentsRemoteEnvironmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRemoteEnvironmentsRemoteEnvironment)(nil)).Elem()
}

func (i GetRemoteEnvironmentsRemoteEnvironmentArray) ToGetRemoteEnvironmentsRemoteEnvironmentArrayOutput() GetRemoteEnvironmentsRemoteEnvironmentArrayOutput {
	return i.ToGetRemoteEnvironmentsRemoteEnvironmentArrayOutputWithContext(context.Background())
}

func (i GetRemoteEnvironmentsRemoteEnvironmentArray) ToGetRemoteEnvironmentsRemoteEnvironmentArrayOutputWithContext(ctx context.Context) GetRemoteEnvironmentsRemoteEnvironmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRemoteEnvironmentsRemoteEnvironmentArrayOutput)
}

type GetRemoteEnvironmentsRemoteEnvironmentOutput struct{ *pulumi.OutputState }

func (GetRemoteEnvironmentsRemoteEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRemoteEnvironmentsRemoteEnvironment)(nil)).Elem()
}

func (o GetRemoteEnvironmentsRemoteEnvironmentOutput) ToGetRemoteEnvironmentsRemoteEnvironmentOutput() GetRemoteEnvironmentsRemoteEnvironmentOutput {
	return o
}

func (o GetRemoteEnvironmentsRemoteEnvironmentOutput) ToGetRemoteEnvironmentsRemoteEnvironmentOutputWithContext(ctx context.Context) GetRemoteEnvironmentsRemoteEnvironmentOutput {
	return o
}

// Name
func (o GetRemoteEnvironmentsRemoteEnvironmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRemoteEnvironmentsRemoteEnvironment) string { return v.Name }).(pulumi.StringOutput)
}

// Possible Values: `CLUSTER`, `EXTERNAL`, `INTERNAL`
func (o GetRemoteEnvironmentsRemoteEnvironmentOutput) NetworkScope() pulumi.StringOutput {
	return o.ApplyT(func(v GetRemoteEnvironmentsRemoteEnvironment) string { return v.NetworkScope }).(pulumi.StringOutput)
}

// Provide a valid token created on the remote environment.
func (o GetRemoteEnvironmentsRemoteEnvironmentOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetRemoteEnvironmentsRemoteEnvironment) string { return v.Token }).(pulumi.StringOutput)
}

// Specify the full URI to the remote environment. Your local environment will have to be able to connect this URI on a network level.
func (o GetRemoteEnvironmentsRemoteEnvironmentOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GetRemoteEnvironmentsRemoteEnvironment) string { return v.Uri }).(pulumi.StringOutput)
}

type GetRemoteEnvironmentsRemoteEnvironmentArrayOutput struct{ *pulumi.OutputState }

func (GetRemoteEnvironmentsRemoteEnvironmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRemoteEnvironmentsRemoteEnvironment)(nil)).Elem()
}

func (o GetRemoteEnvironmentsRemoteEnvironmentArrayOutput) ToGetRemoteEnvironmentsRemoteEnvironmentArrayOutput() GetRemoteEnvironmentsRemoteEnvironmentArrayOutput {
	return o
}

func (o GetRemoteEnvironmentsRemoteEnvironmentArrayOutput) ToGetRemoteEnvironmentsRemoteEnvironmentArrayOutputWithContext(ctx context.Context) GetRemoteEnvironmentsRemoteEnvironmentArrayOutput {
	return o
}

func (o GetRemoteEnvironmentsRemoteEnvironmentArrayOutput) Index(i pulumi.IntInput) GetRemoteEnvironmentsRemoteEnvironmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRemoteEnvironmentsRemoteEnvironment {
		return vs[0].([]GetRemoteEnvironmentsRemoteEnvironment)[vs[1].(int)]
	}).(GetRemoteEnvironmentsRemoteEnvironmentOutput)
}

type GetSyntheticLocationsLocations struct {
	// The cloud provider where the location is hosted.
	CloudPlatform string `pulumi:"cloudPlatform"`
	// The unique ID of the location
	EntityId *string `pulumi:"entityId"`
	// The list of IP addresses assigned to the location.
	//
	//  Only applicable to `PUBLIC` locations
	Ips []string `pulumi:"ips"`
	// The name of the location
	Name *string `pulumi:"name"`
	// The release stage of the location
	Stage string `pulumi:"stage"`
	// The status of the location:
	//
	// * `ENABLED`: The location is displayed as active in the UI. You can assign monitors to the location.
	// * `DISABLED`: The location is displayed as inactive in the UI. You can't assign monitors to the location. Monitors already assigned to the location will stay there and will be executed from the location.
	// * `HIDDEN`: The location is not displayed in the UI. You can't assign monitors to the location. You can only set location as `HIDDEN` when no monitor is assigned to it
	Status string `pulumi:"status"`
	// The type of the location. Supported values are `PUBLIC`, `PRIVATE` and `CLUSTER`
	Type *string `pulumi:"type"`
}

// GetSyntheticLocationsLocationsInput is an input type that accepts GetSyntheticLocationsLocationsArgs and GetSyntheticLocationsLocationsOutput values.
// You can construct a concrete instance of `GetSyntheticLocationsLocationsInput` via:
//
//	GetSyntheticLocationsLocationsArgs{...}
type GetSyntheticLocationsLocationsInput interface {
	pulumi.Input

	ToGetSyntheticLocationsLocationsOutput() GetSyntheticLocationsLocationsOutput
	ToGetSyntheticLocationsLocationsOutputWithContext(context.Context) GetSyntheticLocationsLocationsOutput
}

type GetSyntheticLocationsLocationsArgs struct {
	// The cloud provider where the location is hosted.
	CloudPlatform pulumi.StringInput `pulumi:"cloudPlatform"`
	// The unique ID of the location
	EntityId pulumi.StringPtrInput `pulumi:"entityId"`
	// The list of IP addresses assigned to the location.
	//
	//  Only applicable to `PUBLIC` locations
	Ips pulumi.StringArrayInput `pulumi:"ips"`
	// The name of the location
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The release stage of the location
	Stage pulumi.StringInput `pulumi:"stage"`
	// The status of the location:
	//
	// * `ENABLED`: The location is displayed as active in the UI. You can assign monitors to the location.
	// * `DISABLED`: The location is displayed as inactive in the UI. You can't assign monitors to the location. Monitors already assigned to the location will stay there and will be executed from the location.
	// * `HIDDEN`: The location is not displayed in the UI. You can't assign monitors to the location. You can only set location as `HIDDEN` when no monitor is assigned to it
	Status pulumi.StringInput `pulumi:"status"`
	// The type of the location. Supported values are `PUBLIC`, `PRIVATE` and `CLUSTER`
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetSyntheticLocationsLocationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSyntheticLocationsLocations)(nil)).Elem()
}

func (i GetSyntheticLocationsLocationsArgs) ToGetSyntheticLocationsLocationsOutput() GetSyntheticLocationsLocationsOutput {
	return i.ToGetSyntheticLocationsLocationsOutputWithContext(context.Background())
}

func (i GetSyntheticLocationsLocationsArgs) ToGetSyntheticLocationsLocationsOutputWithContext(ctx context.Context) GetSyntheticLocationsLocationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSyntheticLocationsLocationsOutput)
}

func (i GetSyntheticLocationsLocationsArgs) ToGetSyntheticLocationsLocationsPtrOutput() GetSyntheticLocationsLocationsPtrOutput {
	return i.ToGetSyntheticLocationsLocationsPtrOutputWithContext(context.Background())
}

func (i GetSyntheticLocationsLocationsArgs) ToGetSyntheticLocationsLocationsPtrOutputWithContext(ctx context.Context) GetSyntheticLocationsLocationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSyntheticLocationsLocationsOutput).ToGetSyntheticLocationsLocationsPtrOutputWithContext(ctx)
}

// GetSyntheticLocationsLocationsPtrInput is an input type that accepts GetSyntheticLocationsLocationsArgs, GetSyntheticLocationsLocationsPtr and GetSyntheticLocationsLocationsPtrOutput values.
// You can construct a concrete instance of `GetSyntheticLocationsLocationsPtrInput` via:
//
//	        GetSyntheticLocationsLocationsArgs{...}
//
//	or:
//
//	        nil
type GetSyntheticLocationsLocationsPtrInput interface {
	pulumi.Input

	ToGetSyntheticLocationsLocationsPtrOutput() GetSyntheticLocationsLocationsPtrOutput
	ToGetSyntheticLocationsLocationsPtrOutputWithContext(context.Context) GetSyntheticLocationsLocationsPtrOutput
}

type getSyntheticLocationsLocationsPtrType GetSyntheticLocationsLocationsArgs

func GetSyntheticLocationsLocationsPtr(v *GetSyntheticLocationsLocationsArgs) GetSyntheticLocationsLocationsPtrInput {
	return (*getSyntheticLocationsLocationsPtrType)(v)
}

func (*getSyntheticLocationsLocationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSyntheticLocationsLocations)(nil)).Elem()
}

func (i *getSyntheticLocationsLocationsPtrType) ToGetSyntheticLocationsLocationsPtrOutput() GetSyntheticLocationsLocationsPtrOutput {
	return i.ToGetSyntheticLocationsLocationsPtrOutputWithContext(context.Background())
}

func (i *getSyntheticLocationsLocationsPtrType) ToGetSyntheticLocationsLocationsPtrOutputWithContext(ctx context.Context) GetSyntheticLocationsLocationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSyntheticLocationsLocationsPtrOutput)
}

type GetSyntheticLocationsLocationsOutput struct{ *pulumi.OutputState }

func (GetSyntheticLocationsLocationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSyntheticLocationsLocations)(nil)).Elem()
}

func (o GetSyntheticLocationsLocationsOutput) ToGetSyntheticLocationsLocationsOutput() GetSyntheticLocationsLocationsOutput {
	return o
}

func (o GetSyntheticLocationsLocationsOutput) ToGetSyntheticLocationsLocationsOutputWithContext(ctx context.Context) GetSyntheticLocationsLocationsOutput {
	return o
}

func (o GetSyntheticLocationsLocationsOutput) ToGetSyntheticLocationsLocationsPtrOutput() GetSyntheticLocationsLocationsPtrOutput {
	return o.ToGetSyntheticLocationsLocationsPtrOutputWithContext(context.Background())
}

func (o GetSyntheticLocationsLocationsOutput) ToGetSyntheticLocationsLocationsPtrOutputWithContext(ctx context.Context) GetSyntheticLocationsLocationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSyntheticLocationsLocations) *GetSyntheticLocationsLocations {
		return &v
	}).(GetSyntheticLocationsLocationsPtrOutput)
}

// The cloud provider where the location is hosted.
func (o GetSyntheticLocationsLocationsOutput) CloudPlatform() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticLocationsLocations) string { return v.CloudPlatform }).(pulumi.StringOutput)
}

// The unique ID of the location
func (o GetSyntheticLocationsLocationsOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSyntheticLocationsLocations) *string { return v.EntityId }).(pulumi.StringPtrOutput)
}

// The list of IP addresses assigned to the location.
//
//	Only applicable to `PUBLIC` locations
func (o GetSyntheticLocationsLocationsOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSyntheticLocationsLocations) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

// The name of the location
func (o GetSyntheticLocationsLocationsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSyntheticLocationsLocations) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The release stage of the location
func (o GetSyntheticLocationsLocationsOutput) Stage() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticLocationsLocations) string { return v.Stage }).(pulumi.StringOutput)
}

// The status of the location:
//
// * `ENABLED`: The location is displayed as active in the UI. You can assign monitors to the location.
// * `DISABLED`: The location is displayed as inactive in the UI. You can't assign monitors to the location. Monitors already assigned to the location will stay there and will be executed from the location.
// * `HIDDEN`: The location is not displayed in the UI. You can't assign monitors to the location. You can only set location as `HIDDEN` when no monitor is assigned to it
func (o GetSyntheticLocationsLocationsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticLocationsLocations) string { return v.Status }).(pulumi.StringOutput)
}

// The type of the location. Supported values are `PUBLIC`, `PRIVATE` and `CLUSTER`
func (o GetSyntheticLocationsLocationsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSyntheticLocationsLocations) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type GetSyntheticLocationsLocationsPtrOutput struct{ *pulumi.OutputState }

func (GetSyntheticLocationsLocationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSyntheticLocationsLocations)(nil)).Elem()
}

func (o GetSyntheticLocationsLocationsPtrOutput) ToGetSyntheticLocationsLocationsPtrOutput() GetSyntheticLocationsLocationsPtrOutput {
	return o
}

func (o GetSyntheticLocationsLocationsPtrOutput) ToGetSyntheticLocationsLocationsPtrOutputWithContext(ctx context.Context) GetSyntheticLocationsLocationsPtrOutput {
	return o
}

func (o GetSyntheticLocationsLocationsPtrOutput) Elem() GetSyntheticLocationsLocationsOutput {
	return o.ApplyT(func(v *GetSyntheticLocationsLocations) GetSyntheticLocationsLocations {
		if v != nil {
			return *v
		}
		var ret GetSyntheticLocationsLocations
		return ret
	}).(GetSyntheticLocationsLocationsOutput)
}

// The cloud provider where the location is hosted.
func (o GetSyntheticLocationsLocationsPtrOutput) CloudPlatform() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSyntheticLocationsLocations) *string {
		if v == nil {
			return nil
		}
		return &v.CloudPlatform
	}).(pulumi.StringPtrOutput)
}

// The unique ID of the location
func (o GetSyntheticLocationsLocationsPtrOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSyntheticLocationsLocations) *string {
		if v == nil {
			return nil
		}
		return v.EntityId
	}).(pulumi.StringPtrOutput)
}

// The list of IP addresses assigned to the location.
//
//	Only applicable to `PUBLIC` locations
func (o GetSyntheticLocationsLocationsPtrOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetSyntheticLocationsLocations) []string {
		if v == nil {
			return nil
		}
		return v.Ips
	}).(pulumi.StringArrayOutput)
}

// The name of the location
func (o GetSyntheticLocationsLocationsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSyntheticLocationsLocations) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The release stage of the location
func (o GetSyntheticLocationsLocationsPtrOutput) Stage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSyntheticLocationsLocations) *string {
		if v == nil {
			return nil
		}
		return &v.Stage
	}).(pulumi.StringPtrOutput)
}

// The status of the location:
//
// * `ENABLED`: The location is displayed as active in the UI. You can assign monitors to the location.
// * `DISABLED`: The location is displayed as inactive in the UI. You can't assign monitors to the location. Monitors already assigned to the location will stay there and will be executed from the location.
// * `HIDDEN`: The location is not displayed in the UI. You can't assign monitors to the location. You can only set location as `HIDDEN` when no monitor is assigned to it
func (o GetSyntheticLocationsLocationsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSyntheticLocationsLocations) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// The type of the location. Supported values are `PUBLIC`, `PRIVATE` and `CLUSTER`
func (o GetSyntheticLocationsLocationsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSyntheticLocationsLocations) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type GetSyntheticNodesNode struct {
	// The version of the Active Gate
	ActiveGateVersion string `pulumi:"activeGateVersion"`
	// Specifies whether the Active Gate  has the Auto update option enabled
	AutoUpdate bool `pulumi:"autoUpdate"`
	// Specifies whether Browser Monitors are enabled or not
	BrowserMonitors bool `pulumi:"browserMonitors"`
	// The health check status of the synthetic node
	HealthCheckStatus string `pulumi:"healthCheckStatus"`
	// The hostname of a node
	Hostname string `pulumi:"hostname"`
	// The ID of a node for usage within `SyntheticLocation`
	Id string `pulumi:"id"`
	// The known IP addresses of the node
	Ips []string `pulumi:"ips"`
	// Specifies whether the Active Gate has the One Agent routing enabled
	OneAgentRouting bool `pulumi:"oneAgentRouting"`
	// The Active Gate's host operating system
	OperatingSystem string `pulumi:"operatingSystem"`
	// The version of the synthetic player
	PlayerVersion string `pulumi:"playerVersion"`
	// The status of the synthetic node
	Status string `pulumi:"status"`
	// The version of a node
	Version string `pulumi:"version"`
}

// GetSyntheticNodesNodeInput is an input type that accepts GetSyntheticNodesNodeArgs and GetSyntheticNodesNodeOutput values.
// You can construct a concrete instance of `GetSyntheticNodesNodeInput` via:
//
//	GetSyntheticNodesNodeArgs{...}
type GetSyntheticNodesNodeInput interface {
	pulumi.Input

	ToGetSyntheticNodesNodeOutput() GetSyntheticNodesNodeOutput
	ToGetSyntheticNodesNodeOutputWithContext(context.Context) GetSyntheticNodesNodeOutput
}

type GetSyntheticNodesNodeArgs struct {
	// The version of the Active Gate
	ActiveGateVersion pulumi.StringInput `pulumi:"activeGateVersion"`
	// Specifies whether the Active Gate  has the Auto update option enabled
	AutoUpdate pulumi.BoolInput `pulumi:"autoUpdate"`
	// Specifies whether Browser Monitors are enabled or not
	BrowserMonitors pulumi.BoolInput `pulumi:"browserMonitors"`
	// The health check status of the synthetic node
	HealthCheckStatus pulumi.StringInput `pulumi:"healthCheckStatus"`
	// The hostname of a node
	Hostname pulumi.StringInput `pulumi:"hostname"`
	// The ID of a node for usage within `SyntheticLocation`
	Id pulumi.StringInput `pulumi:"id"`
	// The known IP addresses of the node
	Ips pulumi.StringArrayInput `pulumi:"ips"`
	// Specifies whether the Active Gate has the One Agent routing enabled
	OneAgentRouting pulumi.BoolInput `pulumi:"oneAgentRouting"`
	// The Active Gate's host operating system
	OperatingSystem pulumi.StringInput `pulumi:"operatingSystem"`
	// The version of the synthetic player
	PlayerVersion pulumi.StringInput `pulumi:"playerVersion"`
	// The status of the synthetic node
	Status pulumi.StringInput `pulumi:"status"`
	// The version of a node
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetSyntheticNodesNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSyntheticNodesNode)(nil)).Elem()
}

func (i GetSyntheticNodesNodeArgs) ToGetSyntheticNodesNodeOutput() GetSyntheticNodesNodeOutput {
	return i.ToGetSyntheticNodesNodeOutputWithContext(context.Background())
}

func (i GetSyntheticNodesNodeArgs) ToGetSyntheticNodesNodeOutputWithContext(ctx context.Context) GetSyntheticNodesNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSyntheticNodesNodeOutput)
}

// GetSyntheticNodesNodeArrayInput is an input type that accepts GetSyntheticNodesNodeArray and GetSyntheticNodesNodeArrayOutput values.
// You can construct a concrete instance of `GetSyntheticNodesNodeArrayInput` via:
//
//	GetSyntheticNodesNodeArray{ GetSyntheticNodesNodeArgs{...} }
type GetSyntheticNodesNodeArrayInput interface {
	pulumi.Input

	ToGetSyntheticNodesNodeArrayOutput() GetSyntheticNodesNodeArrayOutput
	ToGetSyntheticNodesNodeArrayOutputWithContext(context.Context) GetSyntheticNodesNodeArrayOutput
}

type GetSyntheticNodesNodeArray []GetSyntheticNodesNodeInput

func (GetSyntheticNodesNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSyntheticNodesNode)(nil)).Elem()
}

func (i GetSyntheticNodesNodeArray) ToGetSyntheticNodesNodeArrayOutput() GetSyntheticNodesNodeArrayOutput {
	return i.ToGetSyntheticNodesNodeArrayOutputWithContext(context.Background())
}

func (i GetSyntheticNodesNodeArray) ToGetSyntheticNodesNodeArrayOutputWithContext(ctx context.Context) GetSyntheticNodesNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSyntheticNodesNodeArrayOutput)
}

type GetSyntheticNodesNodeOutput struct{ *pulumi.OutputState }

func (GetSyntheticNodesNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSyntheticNodesNode)(nil)).Elem()
}

func (o GetSyntheticNodesNodeOutput) ToGetSyntheticNodesNodeOutput() GetSyntheticNodesNodeOutput {
	return o
}

func (o GetSyntheticNodesNodeOutput) ToGetSyntheticNodesNodeOutputWithContext(ctx context.Context) GetSyntheticNodesNodeOutput {
	return o
}

// The version of the Active Gate
func (o GetSyntheticNodesNodeOutput) ActiveGateVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) string { return v.ActiveGateVersion }).(pulumi.StringOutput)
}

// Specifies whether the Active Gate  has the Auto update option enabled
func (o GetSyntheticNodesNodeOutput) AutoUpdate() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) bool { return v.AutoUpdate }).(pulumi.BoolOutput)
}

// Specifies whether Browser Monitors are enabled or not
func (o GetSyntheticNodesNodeOutput) BrowserMonitors() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) bool { return v.BrowserMonitors }).(pulumi.BoolOutput)
}

// The health check status of the synthetic node
func (o GetSyntheticNodesNodeOutput) HealthCheckStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) string { return v.HealthCheckStatus }).(pulumi.StringOutput)
}

// The hostname of a node
func (o GetSyntheticNodesNodeOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) string { return v.Hostname }).(pulumi.StringOutput)
}

// The ID of a node for usage within `SyntheticLocation`
func (o GetSyntheticNodesNodeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) string { return v.Id }).(pulumi.StringOutput)
}

// The known IP addresses of the node
func (o GetSyntheticNodesNodeOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

// Specifies whether the Active Gate has the One Agent routing enabled
func (o GetSyntheticNodesNodeOutput) OneAgentRouting() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) bool { return v.OneAgentRouting }).(pulumi.BoolOutput)
}

// The Active Gate's host operating system
func (o GetSyntheticNodesNodeOutput) OperatingSystem() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) string { return v.OperatingSystem }).(pulumi.StringOutput)
}

// The version of the synthetic player
func (o GetSyntheticNodesNodeOutput) PlayerVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) string { return v.PlayerVersion }).(pulumi.StringOutput)
}

// The status of the synthetic node
func (o GetSyntheticNodesNodeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) string { return v.Status }).(pulumi.StringOutput)
}

// The version of a node
func (o GetSyntheticNodesNodeOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetSyntheticNodesNode) string { return v.Version }).(pulumi.StringOutput)
}

type GetSyntheticNodesNodeArrayOutput struct{ *pulumi.OutputState }

func (GetSyntheticNodesNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSyntheticNodesNode)(nil)).Elem()
}

func (o GetSyntheticNodesNodeArrayOutput) ToGetSyntheticNodesNodeArrayOutput() GetSyntheticNodesNodeArrayOutput {
	return o
}

func (o GetSyntheticNodesNodeArrayOutput) ToGetSyntheticNodesNodeArrayOutputWithContext(ctx context.Context) GetSyntheticNodesNodeArrayOutput {
	return o
}

func (o GetSyntheticNodesNodeArrayOutput) Index(i pulumi.IntInput) GetSyntheticNodesNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSyntheticNodesNode {
		return vs[0].([]GetSyntheticNodesNode)[vs[1].(int)]
	}).(GetSyntheticNodesNodeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsPlaceholdersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPtrInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsPlaceholdersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsXhrActionNamingRulesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayInput)(nil)).Elem(), WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserTagsInput)(nil)).Elem(), WebApplicationUserTagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserTagsPtrInput)(nil)).Elem(), WebApplicationUserTagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserTagsTagInput)(nil)).Elem(), WebApplicationUserTagsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationUserTagsTagArrayInput)(nil)).Elem(), WebApplicationUserTagsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationWaterfallSettingsInput)(nil)).Elem(), WebApplicationWaterfallSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationWaterfallSettingsPtrInput)(nil)).Elem(), WebApplicationWaterfallSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationXhrActionApdexSettingsInput)(nil)).Elem(), WebApplicationXhrActionApdexSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebApplicationXhrActionApdexSettingsPtrInput)(nil)).Elem(), WebApplicationXhrActionApdexSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookNotificationHeadersInput)(nil)).Elem(), WebhookNotificationHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookNotificationHeadersPtrInput)(nil)).Elem(), WebhookNotificationHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookNotificationHeadersHeaderInput)(nil)).Elem(), WebhookNotificationHeadersHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookNotificationHeadersHeaderArrayInput)(nil)).Elem(), WebhookNotificationHeadersHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookNotificationOauth2CredentialsInput)(nil)).Elem(), WebhookNotificationOauth2CredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookNotificationOauth2CredentialsPtrInput)(nil)).Elem(), WebhookNotificationOauth2CredentialsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*XmattersNotificationHeadersInput)(nil)).Elem(), XmattersNotificationHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*XmattersNotificationHeadersPtrInput)(nil)).Elem(), XmattersNotificationHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*XmattersNotificationHeadersHeaderInput)(nil)).Elem(), XmattersNotificationHeadersHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*XmattersNotificationHeadersHeaderArrayInput)(nil)).Elem(), XmattersNotificationHeadersHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertingProfilesValueInput)(nil)).Elem(), GetAlertingProfilesValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertingProfilesValueArrayInput)(nil)).Elem(), GetAlertingProfilesValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDocumentsValueInput)(nil)).Elem(), GetDocumentsValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDocumentsValueArrayInput)(nil)).Elem(), GetDocumentsValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitiesEntityInput)(nil)).Elem(), GetEntitiesEntityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitiesEntityArrayInput)(nil)).Elem(), GetEntitiesEntityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitiesEntityTagInput)(nil)).Elem(), GetEntitiesEntityTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitiesEntityTagArrayInput)(nil)).Elem(), GetEntitiesEntityTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitiesEntityTagTagInput)(nil)).Elem(), GetEntitiesEntityTagTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntitiesEntityTagTagArrayInput)(nil)).Elem(), GetEntitiesEntityTagTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHubItemsItemInput)(nil)).Elem(), GetHubItemsItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHubItemsItemArrayInput)(nil)).Elem(), GetHubItemsItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamPoliciesPolicyInput)(nil)).Elem(), GetIamPoliciesPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetIamPoliciesPolicyArrayInput)(nil)).Elem(), GetIamPoliciesPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementZonesValueInput)(nil)).Elem(), GetManagementZonesValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetManagementZonesValueArrayInput)(nil)).Elem(), GetManagementZonesValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRemoteEnvironmentsRemoteEnvironmentInput)(nil)).Elem(), GetRemoteEnvironmentsRemoteEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRemoteEnvironmentsRemoteEnvironmentArrayInput)(nil)).Elem(), GetRemoteEnvironmentsRemoteEnvironmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSyntheticLocationsLocationsInput)(nil)).Elem(), GetSyntheticLocationsLocationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSyntheticLocationsLocationsPtrInput)(nil)).Elem(), GetSyntheticLocationsLocationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSyntheticNodesNodeInput)(nil)).Elem(), GetSyntheticNodesNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSyntheticNodesNodeArrayInput)(nil)).Elem(), GetSyntheticNodesNodeArray{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsLoadActionNamingRulesRuleConditionsConditionArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPlaceholdersOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPlaceholdersPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsPlaceholdersPlaceholderProcessingStepsStepArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsXhrActionNamingRulesOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsXhrActionNamingRulesPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionOutput{})
	pulumi.RegisterOutputType(WebApplicationUserActionNamingSettingsXhrActionNamingRulesRuleConditionsConditionArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationUserTagsOutput{})
	pulumi.RegisterOutputType(WebApplicationUserTagsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationUserTagsTagOutput{})
	pulumi.RegisterOutputType(WebApplicationUserTagsTagArrayOutput{})
	pulumi.RegisterOutputType(WebApplicationWaterfallSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationWaterfallSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebApplicationXhrActionApdexSettingsOutput{})
	pulumi.RegisterOutputType(WebApplicationXhrActionApdexSettingsPtrOutput{})
	pulumi.RegisterOutputType(WebhookNotificationHeadersOutput{})
	pulumi.RegisterOutputType(WebhookNotificationHeadersPtrOutput{})
	pulumi.RegisterOutputType(WebhookNotificationHeadersHeaderOutput{})
	pulumi.RegisterOutputType(WebhookNotificationHeadersHeaderArrayOutput{})
	pulumi.RegisterOutputType(WebhookNotificationOauth2CredentialsOutput{})
	pulumi.RegisterOutputType(WebhookNotificationOauth2CredentialsPtrOutput{})
	pulumi.RegisterOutputType(XmattersNotificationHeadersOutput{})
	pulumi.RegisterOutputType(XmattersNotificationHeadersPtrOutput{})
	pulumi.RegisterOutputType(XmattersNotificationHeadersHeaderOutput{})
	pulumi.RegisterOutputType(XmattersNotificationHeadersHeaderArrayOutput{})
	pulumi.RegisterOutputType(GetAlertingProfilesValueOutput{})
	pulumi.RegisterOutputType(GetAlertingProfilesValueArrayOutput{})
	pulumi.RegisterOutputType(GetDocumentsValueOutput{})
	pulumi.RegisterOutputType(GetDocumentsValueArrayOutput{})
	pulumi.RegisterOutputType(GetEntitiesEntityOutput{})
	pulumi.RegisterOutputType(GetEntitiesEntityArrayOutput{})
	pulumi.RegisterOutputType(GetEntitiesEntityTagOutput{})
	pulumi.RegisterOutputType(GetEntitiesEntityTagArrayOutput{})
	pulumi.RegisterOutputType(GetEntitiesEntityTagTagOutput{})
	pulumi.RegisterOutputType(GetEntitiesEntityTagTagArrayOutput{})
	pulumi.RegisterOutputType(GetHubItemsItemOutput{})
	pulumi.RegisterOutputType(GetHubItemsItemArrayOutput{})
	pulumi.RegisterOutputType(GetIamPoliciesPolicyOutput{})
	pulumi.RegisterOutputType(GetIamPoliciesPolicyArrayOutput{})
	pulumi.RegisterOutputType(GetManagementZonesValueOutput{})
	pulumi.RegisterOutputType(GetManagementZonesValueArrayOutput{})
	pulumi.RegisterOutputType(GetRemoteEnvironmentsRemoteEnvironmentOutput{})
	pulumi.RegisterOutputType(GetRemoteEnvironmentsRemoteEnvironmentArrayOutput{})
	pulumi.RegisterOutputType(GetSyntheticLocationsLocationsOutput{})
	pulumi.RegisterOutputType(GetSyntheticLocationsLocationsPtrOutput{})
	pulumi.RegisterOutputType(GetSyntheticNodesNodeOutput{})
	pulumi.RegisterOutputType(GetSyntheticNodesNodeArrayOutput{})
}
